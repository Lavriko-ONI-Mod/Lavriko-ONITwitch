### YamlMime:ManagedReference
items:
- uid: ONITwitchLib.TwitchModInfo
  commentId: T:ONITwitchLib.TwitchModInfo
  id: TwitchModInfo
  parent: ONITwitchLib
  children:
  - ONITwitchLib.TwitchModInfo.ConfigFolder
  - ONITwitchLib.TwitchModInfo.ConfigName
  - ONITwitchLib.TwitchModInfo.ConfigPath
  - ONITwitchLib.TwitchModInfo.MainModFolder
  - ONITwitchLib.TwitchModInfo.MainTwitchModType
  - ONITwitchLib.TwitchModInfo.ModPrefix
  - ONITwitchLib.TwitchModInfo.StaticID
  - ONITwitchLib.TwitchModInfo.TwitchIsPresent
  langs:
  - csharp
  - vb
  name: TwitchModInfo
  nameWithType: TwitchModInfo
  fullName: ONITwitchLib.TwitchModInfo
  type: Class
  source:
    remote:
      path: ONITwitchLib/TwitchModInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: TwitchModInfo
    path: ../ONITwitchLib/TwitchModInfo.cs
    startLine: 9
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: Various information about the Twitch mod, primarily for integrations.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static class TwitchModInfo
    content.vb: >-
      <PublicAPI>

      Public Module TwitchModInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.TwitchModInfo.ModPrefix
  commentId: F:ONITwitchLib.TwitchModInfo.ModPrefix
  id: ModPrefix
  parent: ONITwitchLib.TwitchModInfo
  langs:
  - csharp
  - vb
  name: ModPrefix
  nameWithType: TwitchModInfo.ModPrefix
  fullName: ONITwitchLib.TwitchModInfo.ModPrefix
  type: Field
  source:
    remote:
      path: ONITwitchLib/TwitchModInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: ModPrefix
    path: ../ONITwitchLib/TwitchModInfo.cs
    startLine: 15
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: The prefix that the twitch mod uses for IDs, with a few exceptions
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public const string ModPrefix = "ONITwitch."
    return:
      type: System.String
    content.vb: >-
      <PublicAPI>

      Public Const ModPrefix As String = "ONITwitch."
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.TwitchModInfo.StaticID
  commentId: F:ONITwitchLib.TwitchModInfo.StaticID
  id: StaticID
  parent: ONITwitchLib.TwitchModInfo
  langs:
  - csharp
  - vb
  name: StaticID
  nameWithType: TwitchModInfo.StaticID
  fullName: ONITwitchLib.TwitchModInfo.StaticID
  type: Field
  source:
    remote:
      path: ONITwitchLib/TwitchModInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: StaticID
    path: ../ONITwitchLib/TwitchModInfo.cs
    startLine: 20
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: The static ID of the Twitch mod.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public const string StaticID = "asquared31415.TwitchIntegration"
    return:
      type: System.String
    content.vb: >-
      <PublicAPI>

      Public Const StaticID As String = "asquared31415.TwitchIntegration"
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.TwitchModInfo.TwitchIsPresent
  commentId: P:ONITwitchLib.TwitchModInfo.TwitchIsPresent
  id: TwitchIsPresent
  parent: ONITwitchLib.TwitchModInfo
  langs:
  - csharp
  - vb
  name: TwitchIsPresent
  nameWithType: TwitchModInfo.TwitchIsPresent
  fullName: ONITwitchLib.TwitchModInfo.TwitchIsPresent
  type: Property
  source:
    remote:
      path: ONITwitchLib/TwitchModInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: TwitchIsPresent
    path: ../ONITwitchLib/TwitchModInfo.cs
    startLine: 26
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: >-
    True if the Twitch mod has been detected, false otherwise.

    Safe to access even if the Twitch mod is not installed or active.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static bool TwitchIsPresent { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <PublicAPI>

      Public Shared ReadOnly Property TwitchIsPresent As Boolean
  overload: ONITwitchLib.TwitchModInfo.TwitchIsPresent*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.TwitchModInfo.MainTwitchModType
  commentId: P:ONITwitchLib.TwitchModInfo.MainTwitchModType
  id: MainTwitchModType
  parent: ONITwitchLib.TwitchModInfo
  langs:
  - csharp
  - vb
  name: MainTwitchModType
  nameWithType: TwitchModInfo.MainTwitchModType
  fullName: ONITwitchLib.TwitchModInfo.MainTwitchModType
  type: Property
  source:
    remote:
      path: ONITwitchLib/TwitchModInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: MainTwitchModType
    path: ../ONITwitchLib/TwitchModInfo.cs
    startLine: 33
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: >-
    The Type for the main Twitch mod's UserMod2, if it exists. null if it cannot be found.

    Safe to access even if the Twitch mod is not installed or active.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      [CanBeNull]

      public static Type MainTwitchModType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: >-
      <PublicAPI>

      <CanBeNull>

      Public Shared ReadOnly Property MainTwitchModType As Type
  overload: ONITwitchLib.TwitchModInfo.MainTwitchModType*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  - type: JetBrains.Annotations.CanBeNullAttribute
    ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.TwitchModInfo.MainModFolder
  commentId: F:ONITwitchLib.TwitchModInfo.MainModFolder
  id: MainModFolder
  parent: ONITwitchLib.TwitchModInfo
  langs:
  - csharp
  - vb
  name: MainModFolder
  nameWithType: TwitchModInfo.MainModFolder
  fullName: ONITwitchLib.TwitchModInfo.MainModFolder
  type: Field
  source:
    remote:
      path: ONITwitchLib/TwitchModInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: MainModFolder
    path: ../ONITwitchLib/TwitchModInfo.cs
    startLine: 41
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: >-
    The mod folder containing the Twitch mod dll.

    Only valid if the Twitch mod is active.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static readonly string MainModFolder
    return:
      type: System.String
    content.vb: >-
      <PublicAPI>

      Public Shared ReadOnly MainModFolder As String
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.TwitchModInfo.ConfigFolder
  commentId: F:ONITwitchLib.TwitchModInfo.ConfigFolder
  id: ConfigFolder
  parent: ONITwitchLib.TwitchModInfo
  langs:
  - csharp
  - vb
  name: ConfigFolder
  nameWithType: TwitchModInfo.ConfigFolder
  fullName: ONITwitchLib.TwitchModInfo.ConfigFolder
  type: Field
  source:
    remote:
      path: ONITwitchLib/TwitchModInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: ConfigFolder
    path: ../ONITwitchLib/TwitchModInfo.cs
    startLine: 49
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: >-
    The folder that holds the config for the mod.

    Only valid if the Twitch mod is active.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static readonly string ConfigFolder
    return:
      type: System.String
    content.vb: >-
      <PublicAPI>

      Public Shared ReadOnly ConfigFolder As String
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.TwitchModInfo.ConfigName
  commentId: F:ONITwitchLib.TwitchModInfo.ConfigName
  id: ConfigName
  parent: ONITwitchLib.TwitchModInfo
  langs:
  - csharp
  - vb
  name: ConfigName
  nameWithType: TwitchModInfo.ConfigName
  fullName: ONITwitchLib.TwitchModInfo.ConfigName
  type: Field
  source:
    remote:
      path: ONITwitchLib/TwitchModInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: ConfigName
    path: ../ONITwitchLib/TwitchModInfo.cs
    startLine: 61
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: The filename of the config file containing the main Twitch mod config.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public const string ConfigName = "config.json"
    return:
      type: System.String
    content.vb: >-
      <PublicAPI>

      Public Const ConfigName As String = "config.json"
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.TwitchModInfo.ConfigPath
  commentId: F:ONITwitchLib.TwitchModInfo.ConfigPath
  id: ConfigPath
  parent: ONITwitchLib.TwitchModInfo
  langs:
  - csharp
  - vb
  name: ConfigPath
  nameWithType: TwitchModInfo.ConfigPath
  fullName: ONITwitchLib.TwitchModInfo.ConfigPath
  type: Field
  source:
    remote:
      path: ONITwitchLib/TwitchModInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: ConfigPath
    path: ../ONITwitchLib/TwitchModInfo.cs
    startLine: 67
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: >-
    The path to the config file containing the main Twitch mod config.

    Only valid if the Twitch mod is active.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static readonly string ConfigPath
    return:
      type: System.String
    content.vb: >-
      <PublicAPI>

      Public Shared ReadOnly ConfigPath As String
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
references:
- uid: ONITwitchLib
  commentId: N:ONITwitchLib
  href: ONITwitchLib.html
  name: ONITwitchLib
  nameWithType: ONITwitchLib
  fullName: ONITwitchLib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ONITwitchLib.TwitchModInfo.TwitchIsPresent*
  commentId: Overload:ONITwitchLib.TwitchModInfo.TwitchIsPresent
  href: ONITwitchLib.TwitchModInfo.html#ONITwitchLib.TwitchModInfo.TwitchIsPresent
  name: TwitchIsPresent
  nameWithType: TwitchModInfo.TwitchIsPresent
  fullName: ONITwitchLib.TwitchModInfo.TwitchIsPresent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ONITwitchLib.TwitchModInfo.MainTwitchModType*
  commentId: Overload:ONITwitchLib.TwitchModInfo.MainTwitchModType
  href: ONITwitchLib.TwitchModInfo.html#ONITwitchLib.TwitchModInfo.MainTwitchModType
  name: MainTwitchModType
  nameWithType: TwitchModInfo.MainTwitchModType
  fullName: ONITwitchLib.TwitchModInfo.MainTwitchModType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
