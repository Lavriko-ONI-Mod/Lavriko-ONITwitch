### YamlMime:ManagedReference
items:
- uid: ONITwitchLib.Utils.DelegateUtil
  commentId: T:ONITwitchLib.Utils.DelegateUtil
  id: DelegateUtil
  parent: ONITwitchLib.Utils
  children:
  - ONITwitchLib.Utils.DelegateUtil.CreateDelegate``1(System.Reflection.MethodInfo,System.Object)
  - ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type)
  - ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type)
  - ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type,System.Type)
  - ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type,System.Type,System.Type)
  - ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeConstructorDelegate(System.Reflection.ConstructorInfo,System.Type)
  - ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type)
  - ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type)
  - ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type,System.Type)
  - ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type,System.Type,System.Type)
  langs:
  - csharp
  - vb
  name: DelegateUtil
  nameWithType: DelegateUtil
  fullName: ONITwitchLib.Utils.DelegateUtil
  type: Class
  source:
    remote:
      path: ONITwitchLib/Utils/DelegateUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: DelegateUtil
    path: ../ONITwitchLib/Utils/DelegateUtil.cs
    startLine: 11
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: >-
    Utilities for creating delegates.

    Incorrect types are not enforced at compile time, and will turn into a cast exception at runtime.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static class DelegateUtil
    content.vb: >-
      <PublicAPI>

      Public Module DelegateUtil
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Utils.DelegateUtil.CreateDelegate``1(System.Reflection.MethodInfo,System.Object)
  commentId: M:ONITwitchLib.Utils.DelegateUtil.CreateDelegate``1(System.Reflection.MethodInfo,System.Object)
  id: CreateDelegate``1(System.Reflection.MethodInfo,System.Object)
  parent: ONITwitchLib.Utils.DelegateUtil
  langs:
  - csharp
  - vb
  name: CreateDelegate<T>(MethodInfo, object)
  nameWithType: DelegateUtil.CreateDelegate<T>(MethodInfo, object)
  fullName: ONITwitchLib.Utils.DelegateUtil.CreateDelegate<T>(System.Reflection.MethodInfo, object)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/DelegateUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: CreateDelegate
    path: ../ONITwitchLib/Utils/DelegateUtil.cs
    startLine: 24
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: Creates a delegate from a <xref href="System.Reflection.MethodInfo" data-throw-if-not-resolved="false"></xref> and an optional <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/this">this</a> object.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static T CreateDelegate<T>(MethodInfo methodInfo, object arg0) where T : MulticastDelegate
    parameters:
    - id: methodInfo
      type: System.Reflection.MethodInfo
      description: The method to create a delegate for.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg0
      type: System.Object
      description: >-
        The <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/this">this</a> object for the delegate, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if

        it is a <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/static">static</a> method.
      attributes:
      - type: JetBrains.Annotations.CanBeNullAttribute
        ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
        arguments: []
    typeParameters:
    - id: T
      description: The type of the returned delegate.
    return:
      type: '{T}'
      description: A delegate that will call the specified method.
    content.vb: >-
      <PublicAPI>

      Public Shared Function CreateDelegate(Of T As MulticastDelegate)(methodInfo As MethodInfo, arg0 As Object) As T
  overload: ONITwitchLib.Utils.DelegateUtil.CreateDelegate*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: DelegateUtil.CreateDelegate(Of T)(MethodInfo, Object)
  fullName.vb: ONITwitchLib.Utils.DelegateUtil.CreateDelegate(Of T)(System.Reflection.MethodInfo, Object)
  name.vb: CreateDelegate(Of T)(MethodInfo, Object)
- uid: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type)
  commentId: M:ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type)
  id: CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type)
  parent: ONITwitchLib.Utils.DelegateUtil
  langs:
  - csharp
  - vb
  name: CreateRuntimeTypeActionDelegate(MethodInfo, object, Type)
  nameWithType: DelegateUtil.CreateRuntimeTypeActionDelegate(MethodInfo, object, Type)
  fullName: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo, object, System.Type)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/DelegateUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: CreateRuntimeTypeActionDelegate
    path: ../ONITwitchLib/Utils/DelegateUtil.cs
    startLine: 47
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: >-
    Creates a <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> delegate for a method with its generic types replaced

    with <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/reference-types">object</a>, with the real type determined at runtime.
  remarks: >-
    This is relatively expensive as a one-time cost, but still significantly faster than

    <xref href="System.Reflection.MethodBase.Invoke(System.Object%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref> if used several times.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static Action<object> CreateRuntimeTypeActionDelegate(MethodInfo methodInfo, object arg0, Type arg1Type)
    parameters:
    - id: methodInfo
      type: System.Reflection.MethodInfo
      description: The method to call.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg0
      type: System.Object
      description: The optional <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/this">this</a> object for the delegate.
      attributes:
      - type: JetBrains.Annotations.CanBeNullAttribute
        ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
        arguments: []
    - id: arg1Type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the first argument to the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    return:
      type: System.Action{System.Object}
      description: A delegate that calls the specified method, but accepts any type at compile time.
    content.vb: >-
      <PublicAPI>

      Public Shared Function CreateRuntimeTypeActionDelegate(methodInfo As MethodInfo, arg0 As Object, arg1Type As Type) As Action(Of Object)
  overload: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: DelegateUtil.CreateRuntimeTypeActionDelegate(MethodInfo, Object, Type)
  fullName.vb: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo, Object, System.Type)
  name.vb: CreateRuntimeTypeActionDelegate(MethodInfo, Object, Type)
- uid: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type)
  commentId: M:ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type)
  id: CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type)
  parent: ONITwitchLib.Utils.DelegateUtil
  langs:
  - csharp
  - vb
  name: CreateRuntimeTypeActionDelegate(MethodInfo, object, Type, Type)
  nameWithType: DelegateUtil.CreateRuntimeTypeActionDelegate(MethodInfo, object, Type, Type)
  fullName: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo, object, System.Type, System.Type)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/DelegateUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: CreateRuntimeTypeActionDelegate
    path: ../ONITwitchLib/Utils/DelegateUtil.cs
    startLine: 82
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: >-
    Creates a <xref href="System.Action%602" data-throw-if-not-resolved="false"></xref> delegate for a method with its generic types replaced

    with <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/reference-types">object</a>, with the real type determined at runtime.
  remarks: >-
    This is relatively expensive as a one-time cost, but still significantly faster than

    <xref href="System.Reflection.MethodBase.Invoke(System.Object%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref> if used several times.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static Action<object, object> CreateRuntimeTypeActionDelegate(MethodInfo methodInfo, object arg0, Type arg1Type, Type arg2Type)
    parameters:
    - id: methodInfo
      type: System.Reflection.MethodInfo
      description: The method to call.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg0
      type: System.Object
      description: The optional <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/this">this</a> object for the delegate.
      attributes:
      - type: JetBrains.Annotations.CanBeNullAttribute
        ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
        arguments: []
    - id: arg1Type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the first argument to the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg2Type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the second argument to the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    return:
      type: System.Action{System.Object,System.Object}
      description: A delegate that calls the specified method, but accepts any type at compile time.
    content.vb: >-
      <PublicAPI>

      Public Shared Function CreateRuntimeTypeActionDelegate(methodInfo As MethodInfo, arg0 As Object, arg1Type As Type, arg2Type As Type) As Action(Of Object, Object)
  overload: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: DelegateUtil.CreateRuntimeTypeActionDelegate(MethodInfo, Object, Type, Type)
  fullName.vb: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo, Object, System.Type, System.Type)
  name.vb: CreateRuntimeTypeActionDelegate(MethodInfo, Object, Type, Type)
- uid: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type,System.Type)
  commentId: M:ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type,System.Type)
  id: CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type,System.Type)
  parent: ONITwitchLib.Utils.DelegateUtil
  langs:
  - csharp
  - vb
  name: CreateRuntimeTypeActionDelegate(MethodInfo, object, Type, Type, Type)
  nameWithType: DelegateUtil.CreateRuntimeTypeActionDelegate(MethodInfo, object, Type, Type, Type)
  fullName: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo, object, System.Type, System.Type, System.Type)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/DelegateUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: CreateRuntimeTypeActionDelegate
    path: ../ONITwitchLib/Utils/DelegateUtil.cs
    startLine: 119
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: >-
    Creates a <xref href="System.Action%603" data-throw-if-not-resolved="false"></xref> delegate for a method with its generic types replaced

    with <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/reference-types">object</a>, with the real type determined at runtime.
  remarks: >-
    This is relatively expensive as a one-time cost, but still significantly faster than

    <xref href="System.Reflection.MethodBase.Invoke(System.Object%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref> if used several times.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static Action<object, object, object> CreateRuntimeTypeActionDelegate(MethodInfo methodInfo, object arg0, Type arg1Type, Type arg2Type, Type arg3Type)
    parameters:
    - id: methodInfo
      type: System.Reflection.MethodInfo
      description: The method to call.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg0
      type: System.Object
      description: The optional <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/this">this</a> object for the delegate.
      attributes:
      - type: JetBrains.Annotations.CanBeNullAttribute
        ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
        arguments: []
    - id: arg1Type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the first argument to the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg2Type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the second argument to the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg3Type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the third argument to the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    return:
      type: System.Action{System.Object,System.Object,System.Object}
      description: A delegate that calls the specified method, but accepts any type at compile time.
    content.vb: >-
      <PublicAPI>

      Public Shared Function CreateRuntimeTypeActionDelegate(methodInfo As MethodInfo, arg0 As Object, arg1Type As Type, arg2Type As Type, arg3Type As Type) As Action(Of Object, Object, Object)
  overload: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: DelegateUtil.CreateRuntimeTypeActionDelegate(MethodInfo, Object, Type, Type, Type)
  fullName.vb: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo, Object, System.Type, System.Type, System.Type)
  name.vb: CreateRuntimeTypeActionDelegate(MethodInfo, Object, Type, Type, Type)
- uid: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type,System.Type,System.Type)
  commentId: M:ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type,System.Type,System.Type)
  id: CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type,System.Type,System.Type)
  parent: ONITwitchLib.Utils.DelegateUtil
  langs:
  - csharp
  - vb
  name: CreateRuntimeTypeActionDelegate(MethodInfo, object, Type, Type, Type, Type)
  nameWithType: DelegateUtil.CreateRuntimeTypeActionDelegate(MethodInfo, object, Type, Type, Type, Type)
  fullName: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo, object, System.Type, System.Type, System.Type, System.Type)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/DelegateUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: CreateRuntimeTypeActionDelegate
    path: ../ONITwitchLib/Utils/DelegateUtil.cs
    startLine: 158
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: >-
    Creates a <xref href="System.Action%604" data-throw-if-not-resolved="false"></xref> delegate for a method with its generic types replaced

    with <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/reference-types">object</a>, with the real type determined at runtime.
  remarks: >-
    This is relatively expensive as a one-time cost, but still significantly faster than

    <xref href="System.Reflection.MethodBase.Invoke(System.Object%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref> if used several times.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static Action<object, object, object, object> CreateRuntimeTypeActionDelegate(MethodInfo methodInfo, object arg0, Type arg1Type, Type arg2Type, Type arg3Type, Type arg4Type)
    parameters:
    - id: methodInfo
      type: System.Reflection.MethodInfo
      description: The method to call.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg0
      type: System.Object
      description: The optional <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/this">this</a> object for the delegate.
      attributes:
      - type: JetBrains.Annotations.CanBeNullAttribute
        ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
        arguments: []
    - id: arg1Type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the first argument to the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg2Type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the second argument to the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg3Type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the third argument to the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg4Type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the fourth argument to the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    return:
      type: System.Action{System.Object,System.Object,System.Object,System.Object}
      description: A delegate that calls the specified method, but accepts any type at compile time.
    content.vb: >-
      <PublicAPI>

      Public Shared Function CreateRuntimeTypeActionDelegate(methodInfo As MethodInfo, arg0 As Object, arg1Type As Type, arg2Type As Type, arg3Type As Type, arg4Type As Type) As Action(Of Object, Object, Object, Object)
  overload: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: DelegateUtil.CreateRuntimeTypeActionDelegate(MethodInfo, Object, Type, Type, Type, Type)
  fullName.vb: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo, Object, System.Type, System.Type, System.Type, System.Type)
  name.vb: CreateRuntimeTypeActionDelegate(MethodInfo, Object, Type, Type, Type, Type)
- uid: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type)
  commentId: M:ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type)
  id: CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type)
  parent: ONITwitchLib.Utils.DelegateUtil
  langs:
  - csharp
  - vb
  name: CreateRuntimeTypeFuncDelegate(MethodInfo, object, Type)
  nameWithType: DelegateUtil.CreateRuntimeTypeFuncDelegate(MethodInfo, object, Type)
  fullName: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo, object, System.Type)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/DelegateUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: CreateRuntimeTypeFuncDelegate
    path: ../ONITwitchLib/Utils/DelegateUtil.cs
    startLine: 195
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: >-
    Creates a <xref href="System.Func%601" data-throw-if-not-resolved="false"></xref> delegate for a method with its generic types replaced

    with <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/reference-types">object</a>, with the real type determined at runtime.
  remarks: >-
    This is relatively expensive as a one-time cost, but still significantly faster than

    <xref href="System.Reflection.MethodBase.Invoke(System.Object%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref> if used several times.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static Func<object> CreateRuntimeTypeFuncDelegate(MethodInfo methodInfo, object arg0, Type retType)
    parameters:
    - id: methodInfo
      type: System.Reflection.MethodInfo
      description: The method to call.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg0
      type: System.Object
      description: The optional <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/this">this</a> object for the delegate.
      attributes:
      - type: JetBrains.Annotations.CanBeNullAttribute
        ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
        arguments: []
    - id: retType
      type: System.Type
      description: The return <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    return:
      type: System.Func{System.Object}
      description: A delegate that calls the specified method, but accepts any type at compile time.
    content.vb: >-
      <PublicAPI>

      Public Shared Function CreateRuntimeTypeFuncDelegate(methodInfo As MethodInfo, arg0 As Object, retType As Type) As Func(Of Object)
  overload: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: DelegateUtil.CreateRuntimeTypeFuncDelegate(MethodInfo, Object, Type)
  fullName.vb: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo, Object, System.Type)
  name.vb: CreateRuntimeTypeFuncDelegate(MethodInfo, Object, Type)
- uid: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type)
  commentId: M:ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type)
  id: CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type)
  parent: ONITwitchLib.Utils.DelegateUtil
  langs:
  - csharp
  - vb
  name: CreateRuntimeTypeFuncDelegate(MethodInfo, object, Type, Type)
  nameWithType: DelegateUtil.CreateRuntimeTypeFuncDelegate(MethodInfo, object, Type, Type)
  fullName: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo, object, System.Type, System.Type)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/DelegateUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: CreateRuntimeTypeFuncDelegate
    path: ../ONITwitchLib/Utils/DelegateUtil.cs
    startLine: 230
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: >-
    Creates a <xref href="System.Func%602" data-throw-if-not-resolved="false"></xref> delegate for a method with its generic types replaced

    with <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/reference-types">object</a>, with the real type determined at runtime.
  remarks: >-
    This is relatively expensive as a one-time cost, but still significantly faster than

    <xref href="System.Reflection.MethodBase.Invoke(System.Object%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref> if used several times.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static Func<object, object> CreateRuntimeTypeFuncDelegate(MethodInfo methodInfo, object arg0, Type arg1Type, Type retType)
    parameters:
    - id: methodInfo
      type: System.Reflection.MethodInfo
      description: The method to call.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg0
      type: System.Object
      description: The optional <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/this">this</a> object for the delegate.
      attributes:
      - type: JetBrains.Annotations.CanBeNullAttribute
        ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
        arguments: []
    - id: arg1Type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the first argument to the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: retType
      type: System.Type
      description: The return <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    return:
      type: System.Func{System.Object,System.Object}
      description: A delegate that calls the specified method, but accepts any type at compile time.
    content.vb: >-
      <PublicAPI>

      Public Shared Function CreateRuntimeTypeFuncDelegate(methodInfo As MethodInfo, arg0 As Object, arg1Type As Type, retType As Type) As Func(Of Object, Object)
  overload: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: DelegateUtil.CreateRuntimeTypeFuncDelegate(MethodInfo, Object, Type, Type)
  fullName.vb: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo, Object, System.Type, System.Type)
  name.vb: CreateRuntimeTypeFuncDelegate(MethodInfo, Object, Type, Type)
- uid: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type,System.Type)
  commentId: M:ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type,System.Type)
  id: CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type,System.Type)
  parent: ONITwitchLib.Utils.DelegateUtil
  langs:
  - csharp
  - vb
  name: CreateRuntimeTypeFuncDelegate(MethodInfo, object, Type, Type, Type)
  nameWithType: DelegateUtil.CreateRuntimeTypeFuncDelegate(MethodInfo, object, Type, Type, Type)
  fullName: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo, object, System.Type, System.Type, System.Type)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/DelegateUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: CreateRuntimeTypeFuncDelegate
    path: ../ONITwitchLib/Utils/DelegateUtil.cs
    startLine: 267
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: >-
    Creates a <xref href="System.Func%603" data-throw-if-not-resolved="false"></xref> delegate for a method with its generic types replaced

    with <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/reference-types">object</a>, with the real type determined at runtime.
  remarks: >-
    This is relatively expensive as a one-time cost, but still significantly faster than

    <xref href="System.Reflection.MethodBase.Invoke(System.Object%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref> if used several times.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static Func<object, object, object> CreateRuntimeTypeFuncDelegate(MethodInfo methodInfo, object arg0, Type arg1Type, Type arg2Type, Type retType)
    parameters:
    - id: methodInfo
      type: System.Reflection.MethodInfo
      description: The method to call.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg0
      type: System.Object
      description: The optional <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/this">this</a> object for the delegate.
      attributes:
      - type: JetBrains.Annotations.CanBeNullAttribute
        ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
        arguments: []
    - id: arg1Type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the first argument to the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg2Type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the second argument to the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: retType
      type: System.Type
      description: The return <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    return:
      type: System.Func{System.Object,System.Object,System.Object}
      description: A delegate that calls the specified method, but accepts any type at compile time.
    content.vb: >-
      <PublicAPI>

      Public Shared Function CreateRuntimeTypeFuncDelegate(methodInfo As MethodInfo, arg0 As Object, arg1Type As Type, arg2Type As Type, retType As Type) As Func(Of Object, Object, Object)
  overload: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: DelegateUtil.CreateRuntimeTypeFuncDelegate(MethodInfo, Object, Type, Type, Type)
  fullName.vb: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo, Object, System.Type, System.Type, System.Type)
  name.vb: CreateRuntimeTypeFuncDelegate(MethodInfo, Object, Type, Type, Type)
- uid: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type,System.Type,System.Type)
  commentId: M:ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type,System.Type,System.Type)
  id: CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type,System.Type,System.Type,System.Type)
  parent: ONITwitchLib.Utils.DelegateUtil
  langs:
  - csharp
  - vb
  name: CreateRuntimeTypeFuncDelegate(MethodInfo, object, Type, Type, Type, Type)
  nameWithType: DelegateUtil.CreateRuntimeTypeFuncDelegate(MethodInfo, object, Type, Type, Type, Type)
  fullName: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo, object, System.Type, System.Type, System.Type, System.Type)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/DelegateUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: CreateRuntimeTypeFuncDelegate
    path: ../ONITwitchLib/Utils/DelegateUtil.cs
    startLine: 306
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: >-
    Creates a <xref href="System.Func%604" data-throw-if-not-resolved="false"></xref> delegate for a method with its generic types replaced

    with <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/reference-types">object</a>, with the real type determined at runtime.
  remarks: >-
    This is relatively expensive as a one-time cost, but still significantly faster than

    <xref href="System.Reflection.MethodBase.Invoke(System.Object%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref> if used several times.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static Func<object, object, object, object> CreateRuntimeTypeFuncDelegate(MethodInfo methodInfo, object arg0, Type arg1Type, Type arg2Type, Type arg3Type, Type retType)
    parameters:
    - id: methodInfo
      type: System.Reflection.MethodInfo
      description: The method to call.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg0
      type: System.Object
      description: The optional <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/this">this</a> object for the delegate.
      attributes:
      - type: JetBrains.Annotations.CanBeNullAttribute
        ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
        arguments: []
    - id: arg1Type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the first argument to the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg2Type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the second argument to the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg3Type
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the third argument to the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: retType
      type: System.Type
      description: The return <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the method.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    return:
      type: System.Func{System.Object,System.Object,System.Object,System.Object}
      description: A delegate that calls the specified method, but accepts any type at compile time.
    content.vb: >-
      <PublicAPI>

      Public Shared Function CreateRuntimeTypeFuncDelegate(methodInfo As MethodInfo, arg0 As Object, arg1Type As Type, arg2Type As Type, arg3Type As Type, retType As Type) As Func(Of Object, Object, Object, Object)
  overload: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: DelegateUtil.CreateRuntimeTypeFuncDelegate(MethodInfo, Object, Type, Type, Type, Type)
  fullName.vb: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo, Object, System.Type, System.Type, System.Type, System.Type)
  name.vb: CreateRuntimeTypeFuncDelegate(MethodInfo, Object, Type, Type, Type, Type)
- uid: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeConstructorDelegate(System.Reflection.ConstructorInfo,System.Type)
  commentId: M:ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeConstructorDelegate(System.Reflection.ConstructorInfo,System.Type)
  id: CreateRuntimeTypeConstructorDelegate(System.Reflection.ConstructorInfo,System.Type)
  parent: ONITwitchLib.Utils.DelegateUtil
  langs:
  - csharp
  - vb
  name: CreateRuntimeTypeConstructorDelegate(ConstructorInfo, Type)
  nameWithType: DelegateUtil.CreateRuntimeTypeConstructorDelegate(ConstructorInfo, Type)
  fullName: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeConstructorDelegate(System.Reflection.ConstructorInfo, System.Type)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/DelegateUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: CreateRuntimeTypeConstructorDelegate
    path: ../ONITwitchLib/Utils/DelegateUtil.cs
    startLine: 342
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: >-
    Creates a <xref href="System.Func%602" data-throw-if-not-resolved="false"></xref> delegate for a constructor with its generic types replaced

    with <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/reference-types">object</a>, with the real type determined at runtime.
  remarks: >-
    This is relatively expensive as a one-time cost, but still significantly faster than

    <xref href="System.Reflection.MethodBase.Invoke(System.Object%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref> if used several times.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static Func<object, object> CreateRuntimeTypeConstructorDelegate(ConstructorInfo constructorInfo, Type arg1Ty)
    parameters:
    - id: constructorInfo
      type: System.Reflection.ConstructorInfo
      description: The constructor to call.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: arg1Ty
      type: System.Type
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> of the first argument to the constructor.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    return:
      type: System.Func{System.Object,System.Object}
      description: A delegate that calls the specified method, but accepts any type at compile time.
    content.vb: >-
      <PublicAPI>

      Public Shared Function CreateRuntimeTypeConstructorDelegate(constructorInfo As ConstructorInfo, arg1Ty As Type) As Func(Of Object, Object)
  overload: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeConstructorDelegate*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
references:
- uid: ONITwitchLib.Utils
  commentId: N:ONITwitchLib.Utils
  href: ONITwitchLib.html
  name: ONITwitchLib.Utils
  nameWithType: ONITwitchLib.Utils
  fullName: ONITwitchLib.Utils
  spec.csharp:
  - uid: ONITwitchLib
    name: ONITwitchLib
    href: ONITwitchLib.html
  - name: .
  - uid: ONITwitchLib.Utils
    name: Utils
    href: ONITwitchLib.Utils.html
  spec.vb:
  - uid: ONITwitchLib
    name: ONITwitchLib
    href: ONITwitchLib.html
  - name: .
  - uid: ONITwitchLib.Utils
    name: Utils
    href: ONITwitchLib.Utils.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: ONITwitchLib.Utils.DelegateUtil.CreateDelegate*
  commentId: Overload:ONITwitchLib.Utils.DelegateUtil.CreateDelegate
  href: ONITwitchLib.Utils.DelegateUtil.html#ONITwitchLib.Utils.DelegateUtil.CreateDelegate``1(System.Reflection.MethodInfo,System.Object)
  name: CreateDelegate
  nameWithType: DelegateUtil.CreateDelegate
  fullName: ONITwitchLib.Utils.DelegateUtil.CreateDelegate
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: T
  commentId: '!:T'
  name: T
  nameWithType: T
  fullName: T
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
  commentId: M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.methodbase.invoke#system-reflection-methodbase-invoke(system-object-system-object())
  name: Invoke(object, object[])
  nameWithType: MethodBase.Invoke(object, object[])
  fullName: System.Reflection.MethodBase.Invoke(object, object[])
  nameWithType.vb: MethodBase.Invoke(Object, Object())
  fullName.vb: System.Reflection.MethodBase.Invoke(Object, Object())
  name.vb: Invoke(Object, Object())
  spec.csharp:
  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
    name: Invoke
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.methodbase.invoke#system-reflection-methodbase-invoke(system-object-system-object())
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])
    name: Invoke
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.methodbase.invoke#system-reflection-methodbase-invoke(system-object-system-object())
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate*
  commentId: Overload:ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate
  href: ONITwitchLib.Utils.DelegateUtil.html#ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate(System.Reflection.MethodInfo,System.Object,System.Type)
  name: CreateRuntimeTypeActionDelegate
  nameWithType: DelegateUtil.CreateRuntimeTypeActionDelegate
  fullName: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeActionDelegate
- uid: System.Action{System.Object}
  commentId: T:System.Action{System.Object}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<object>
  nameWithType: Action<object>
  fullName: System.Action<object>
  nameWithType.vb: Action(Of Object)
  fullName.vb: System.Action(Of Object)
  name.vb: Action(Of Object)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.Action{System.Object,System.Object}
  commentId: T:System.Action{System.Object,System.Object}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<object, object>
  nameWithType: Action<object, object>
  fullName: System.Action<object, object>
  nameWithType.vb: Action(Of Object, Object)
  fullName.vb: System.Action(Of Object, Object)
  name.vb: Action(Of Object, Object)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: System.Action{System.Object,System.Object,System.Object}
  commentId: T:System.Action{System.Object,System.Object,System.Object}
  parent: System
  definition: System.Action`3
  href: https://learn.microsoft.com/dotnet/api/system.action-3
  name: Action<object, object, object>
  nameWithType: Action<object, object, object>
  fullName: System.Action<object, object, object>
  nameWithType.vb: Action(Of Object, Object, Object)
  fullName.vb: System.Action(Of Object, Object, Object)
  name.vb: Action(Of Object, Object, Object)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Action`4
  commentId: T:System.Action`4
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-4
  name: Action<T1, T2, T3, T4>
  nameWithType: Action<T1, T2, T3, T4>
  fullName: System.Action<T1, T2, T3, T4>
  nameWithType.vb: Action(Of T1, T2, T3, T4)
  fullName.vb: System.Action(Of T1, T2, T3, T4)
  name.vb: Action(Of T1, T2, T3, T4)
  spec.csharp:
  - uid: System.Action`4
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-4
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: '>'
  spec.vb:
  - uid: System.Action`4
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-4
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
- uid: System.Action{System.Object,System.Object,System.Object,System.Object}
  commentId: T:System.Action{System.Object,System.Object,System.Object,System.Object}
  parent: System
  definition: System.Action`4
  href: https://learn.microsoft.com/dotnet/api/system.action-4
  name: Action<object, object, object, object>
  nameWithType: Action<object, object, object, object>
  fullName: System.Action<object, object, object, object>
  nameWithType.vb: Action(Of Object, Object, Object, Object)
  fullName.vb: System.Action(Of Object, Object, Object, Object)
  name.vb: Action(Of Object, Object, Object, Object)
  spec.csharp:
  - uid: System.Action`4
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-4
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Action`4
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-4
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate*
  commentId: Overload:ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate
  href: ONITwitchLib.Utils.DelegateUtil.html#ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate(System.Reflection.MethodInfo,System.Object,System.Type)
  name: CreateRuntimeTypeFuncDelegate
  nameWithType: DelegateUtil.CreateRuntimeTypeFuncDelegate
  fullName: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeFuncDelegate
- uid: System.Func{System.Object}
  commentId: T:System.Func{System.Object}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<object>
  nameWithType: Func<object>
  fullName: System.Func<object>
  nameWithType.vb: Func(Of Object)
  fullName.vb: System.Func(Of Object)
  name.vb: Func(Of Object)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{System.Object,System.Object}
  commentId: T:System.Func{System.Object,System.Object}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<object, object>
  nameWithType: Func<object, object>
  fullName: System.Func<object, object>
  nameWithType.vb: Func(Of Object, Object)
  fullName.vb: System.Func(Of Object, Object)
  name.vb: Func(Of Object, Object)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{System.Object,System.Object,System.Object}
  commentId: T:System.Func{System.Object,System.Object,System.Object}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<object, object, object>
  nameWithType: Func<object, object, object>
  fullName: System.Func<object, object, object>
  nameWithType.vb: Func(Of Object, Object, Object)
  fullName.vb: System.Func(Of Object, Object, Object)
  name.vb: Func(Of Object, Object, Object)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{System.Object,System.Object,System.Object,System.Object}
  commentId: T:System.Func{System.Object,System.Object,System.Object,System.Object}
  parent: System
  definition: System.Func`4
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<object, object, object, object>
  nameWithType: Func<object, object, object, object>
  fullName: System.Func<object, object, object, object>
  nameWithType.vb: Func(Of Object, Object, Object, Object)
  fullName.vb: System.Func(Of Object, Object, Object, Object)
  name.vb: Func(Of Object, Object, Object, Object)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeConstructorDelegate*
  commentId: Overload:ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeConstructorDelegate
  href: ONITwitchLib.Utils.DelegateUtil.html#ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeConstructorDelegate(System.Reflection.ConstructorInfo,System.Type)
  name: CreateRuntimeTypeConstructorDelegate
  nameWithType: DelegateUtil.CreateRuntimeTypeConstructorDelegate
  fullName: ONITwitchLib.Utils.DelegateUtil.CreateRuntimeTypeConstructorDelegate
- uid: System.Reflection.ConstructorInfo
  commentId: T:System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.constructorinfo
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
