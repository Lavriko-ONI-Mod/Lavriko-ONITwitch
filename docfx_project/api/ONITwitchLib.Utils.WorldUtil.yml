### YamlMime:ManagedReference
items:
- uid: ONITwitchLib.Utils.WorldUtil
  commentId: T:ONITwitchLib.Utils.WorldUtil
  id: WorldUtil
  parent: ONITwitchLib.Utils
  children:
  - ONITwitchLib.Utils.WorldUtil.AddDiagnostic(System.Int32,ColonyDiagnostic,ColonyDiagnosticUtility.DisplaySetting)
  - ONITwitchLib.Utils.WorldUtil.CreateWorldWithTemplate(UnityEngine.GameObject,Vector2I,System.String,System.Action{WorldContainer})
  - ONITwitchLib.Utils.WorldUtil.FreeGridSpace(Vector2I,Vector2I)
  - ONITwitchLib.Utils.WorldUtil.RefreshWorldSelector(System.Nullable{System.Int32})
  langs:
  - csharp
  - vb
  name: WorldUtil
  nameWithType: WorldUtil
  fullName: ONITwitchLib.Utils.WorldUtil
  type: Class
  source:
    remote:
      path: ONITwitchLib/Utils/WorldUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: WorldUtil
    path: ../ONITwitchLib/Utils/WorldUtil.cs
    startLine: 13
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: Utilities for working with worlds.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static class WorldUtil
    content.vb: >-
      <PublicAPI>

      Public Module WorldUtil
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Utils.WorldUtil.CreateWorldWithTemplate(UnityEngine.GameObject,Vector2I,System.String,System.Action{WorldContainer})
  commentId: M:ONITwitchLib.Utils.WorldUtil.CreateWorldWithTemplate(UnityEngine.GameObject,Vector2I,System.String,System.Action{WorldContainer})
  id: CreateWorldWithTemplate(UnityEngine.GameObject,Vector2I,System.String,System.Action{WorldContainer})
  parent: ONITwitchLib.Utils.WorldUtil
  langs:
  - csharp
  - vb
  name: CreateWorldWithTemplate(GameObject, Vector2I, string, Action<WorldContainer>)
  nameWithType: WorldUtil.CreateWorldWithTemplate(GameObject, Vector2I, string, Action<WorldContainer>)
  fullName: ONITwitchLib.Utils.WorldUtil.CreateWorldWithTemplate(UnityEngine.GameObject, Vector2I, string, System.Action<WorldContainer>)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/WorldUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: CreateWorldWithTemplate
    path: ../ONITwitchLib/Utils/WorldUtil.cs
    startLine: 36
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: >-
    Allocates <xref href="Grid" data-throw-if-not-resolved="false"></xref> space for a world and creates the world with a template, calling the callback once

    the template is placed.
  remarks: >-
    Important notes for modder usage:<br />

    The <code>WorldContainer</code> does not have an <code>overworldCell</code> set. You should set that field

    and add the cell to <code>SaveLoader.Instance.clusterDetailSave.overworldCells</code>.<br />

    None of the <code>Grid</code> is revealed. Use <code>GridVisibility.Reveal</code> or <code>Grid.Reveal</code> to reveal the grid.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      [CanBeNull]

      public static WorldContainer CreateWorldWithTemplate(GameObject worldGo, Vector2I size, string template, Action<WorldContainer> callback = null)
    parameters:
    - id: worldGo
      type: UnityEngine.GameObject
      description: The object that is an instance of a <xref href="ClusterGridEntity" data-throw-if-not-resolved="false"></xref> to set up as the world.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: size
      type: Vector2I
      description: The size of the world to create, in cells.
    - id: template
      type: System.String
      description: The template to place in the world.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: callback
      type: System.Action{WorldContainer}
      description: If present, the callback to call after placing the template.
      attributes:
      - type: JetBrains.Annotations.CanBeNullAttribute
        ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
        arguments: []
    return:
      type: WorldContainer
      description: The <xref href="WorldContainer" data-throw-if-not-resolved="false"></xref> for the newly created world.
    content.vb: >-
      <PublicAPI>

      <CanBeNull>

      Public Shared Function CreateWorldWithTemplate(worldGo As GameObject, size As Vector2I, template As String, callback As Action(Of WorldContainer) = Nothing) As WorldContainer
  overload: ONITwitchLib.Utils.WorldUtil.CreateWorldWithTemplate*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  - type: JetBrains.Annotations.CanBeNullAttribute
    ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
    arguments: []
  nameWithType.vb: WorldUtil.CreateWorldWithTemplate(GameObject, Vector2I, String, Action(Of WorldContainer))
  fullName.vb: ONITwitchLib.Utils.WorldUtil.CreateWorldWithTemplate(UnityEngine.GameObject, Vector2I, String, System.Action(Of WorldContainer))
  name.vb: CreateWorldWithTemplate(GameObject, Vector2I, String, Action(Of WorldContainer))
- uid: ONITwitchLib.Utils.WorldUtil.FreeGridSpace(Vector2I,Vector2I)
  commentId: M:ONITwitchLib.Utils.WorldUtil.FreeGridSpace(Vector2I,Vector2I)
  id: FreeGridSpace(Vector2I,Vector2I)
  parent: ONITwitchLib.Utils.WorldUtil
  langs:
  - csharp
  - vb
  name: FreeGridSpace(Vector2I, Vector2I)
  nameWithType: WorldUtil.FreeGridSpace(Vector2I, Vector2I)
  fullName: ONITwitchLib.Utils.WorldUtil.FreeGridSpace(Vector2I, Vector2I)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/WorldUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: FreeGridSpace
    path: ../ONITwitchLib/Utils/WorldUtil.cs
    startLine: 89
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: >-
    Frees grid space for a world. This is a version of Grid.FreeGridSpace that actually functions to clear some

    properties of the cells, to avoid bugs where the solid property is not properly cleared.
  example: []
  syntax:
    content: public static void FreeGridSpace(Vector2I size, Vector2I offset)
    parameters:
    - id: size
      type: Vector2I
      description: The size of the space to clear, in cells.
    - id: offset
      type: Vector2I
      description: The starting offset of the space to clear, in cells.
    content.vb: Public Shared Sub FreeGridSpace(size As Vector2I, offset As Vector2I)
  overload: ONITwitchLib.Utils.WorldUtil.FreeGridSpace*
- uid: ONITwitchLib.Utils.WorldUtil.RefreshWorldSelector(System.Nullable{System.Int32})
  commentId: M:ONITwitchLib.Utils.WorldUtil.RefreshWorldSelector(System.Nullable{System.Int32})
  id: RefreshWorldSelector(System.Nullable{System.Int32})
  parent: ONITwitchLib.Utils.WorldUtil
  langs:
  - csharp
  - vb
  name: RefreshWorldSelector(int?)
  nameWithType: WorldUtil.RefreshWorldSelector(int?)
  fullName: ONITwitchLib.Utils.WorldUtil.RefreshWorldSelector(int?)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/WorldUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: RefreshWorldSelector
    path: ../ONITwitchLib/Utils/WorldUtil.cs
    startLine: 114
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: >-
    Refreshes the specified world index in the world selector, or refreshes the entire selector if no index is

    provided.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static void RefreshWorldSelector(int? worldIndex = null)
    parameters:
    - id: worldIndex
      type: System.Nullable{System.Int32}
      description: The index of the world to refresh.
      attributes:
      - type: JetBrains.Annotations.CanBeNullAttribute
        ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
        arguments: []
    content.vb: >-
      <PublicAPI>

      Public Shared Sub RefreshWorldSelector(worldIndex As Integer? = Nothing)
  overload: ONITwitchLib.Utils.WorldUtil.RefreshWorldSelector*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: WorldUtil.RefreshWorldSelector(Integer?)
  fullName.vb: ONITwitchLib.Utils.WorldUtil.RefreshWorldSelector(Integer?)
  name.vb: RefreshWorldSelector(Integer?)
- uid: ONITwitchLib.Utils.WorldUtil.AddDiagnostic(System.Int32,ColonyDiagnostic,ColonyDiagnosticUtility.DisplaySetting)
  commentId: M:ONITwitchLib.Utils.WorldUtil.AddDiagnostic(System.Int32,ColonyDiagnostic,ColonyDiagnosticUtility.DisplaySetting)
  id: AddDiagnostic(System.Int32,ColonyDiagnostic,ColonyDiagnosticUtility.DisplaySetting)
  parent: ONITwitchLib.Utils.WorldUtil
  langs:
  - csharp
  - vb
  name: AddDiagnostic(int, ColonyDiagnostic, DisplaySetting)
  nameWithType: WorldUtil.AddDiagnostic(int, ColonyDiagnostic, ColonyDiagnosticUtility.DisplaySetting)
  fullName: ONITwitchLib.Utils.WorldUtil.AddDiagnostic(int, ColonyDiagnostic, ColonyDiagnosticUtility.DisplaySetting)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/WorldUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: AddDiagnostic
    path: ../ONITwitchLib/Utils/WorldUtil.cs
    startLine: 168
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: Adds a diagnostic to a world.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static void AddDiagnostic(int worldIdx, ColonyDiagnostic diagnostic, ColonyDiagnosticUtility.DisplaySetting displaySetting = DisplaySetting.AlertOnly)
    parameters:
    - id: worldIdx
      type: System.Int32
      description: The index of the world to add to.
    - id: diagnostic
      type: ColonyDiagnostic
      description: The diagnostic to add.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: displaySetting
      type: ColonyDiagnosticUtility.DisplaySetting
      description: When to display the diagnostic in the world selector.
    content.vb: >-
      <PublicAPI>

      Public Shared Sub AddDiagnostic(worldIdx As Integer, diagnostic As ColonyDiagnostic, displaySetting As ColonyDiagnosticUtility.DisplaySetting = DisplaySetting.AlertOnly)
  overload: ONITwitchLib.Utils.WorldUtil.AddDiagnostic*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: WorldUtil.AddDiagnostic(Integer, ColonyDiagnostic, ColonyDiagnosticUtility.DisplaySetting)
  fullName.vb: ONITwitchLib.Utils.WorldUtil.AddDiagnostic(Integer, ColonyDiagnostic, ColonyDiagnosticUtility.DisplaySetting)
  name.vb: AddDiagnostic(Integer, ColonyDiagnostic, DisplaySetting)
references:
- uid: ONITwitchLib.Utils
  commentId: N:ONITwitchLib.Utils
  href: ONITwitchLib.html
  name: ONITwitchLib.Utils
  nameWithType: ONITwitchLib.Utils
  fullName: ONITwitchLib.Utils
  spec.csharp:
  - uid: ONITwitchLib
    name: ONITwitchLib
    href: ONITwitchLib.html
  - name: .
  - uid: ONITwitchLib.Utils
    name: Utils
    href: ONITwitchLib.Utils.html
  spec.vb:
  - uid: ONITwitchLib
    name: ONITwitchLib
    href: ONITwitchLib.html
  - name: .
  - uid: ONITwitchLib.Utils
    name: Utils
    href: ONITwitchLib.Utils.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Grid
  commentId: T:Grid
  isExternal: true
  name: Grid
  nameWithType: Grid
  fullName: Grid
- uid: ClusterGridEntity
  commentId: T:ClusterGridEntity
  isExternal: true
  name: ClusterGridEntity
  nameWithType: ClusterGridEntity
  fullName: ClusterGridEntity
- uid: WorldContainer
  commentId: T:WorldContainer
  isExternal: true
  name: WorldContainer
  nameWithType: WorldContainer
  fullName: WorldContainer
- uid: ONITwitchLib.Utils.WorldUtil.CreateWorldWithTemplate*
  commentId: Overload:ONITwitchLib.Utils.WorldUtil.CreateWorldWithTemplate
  href: ONITwitchLib.Utils.WorldUtil.html#ONITwitchLib.Utils.WorldUtil.CreateWorldWithTemplate(UnityEngine.GameObject,Vector2I,System.String,System.Action{WorldContainer})
  name: CreateWorldWithTemplate
  nameWithType: WorldUtil.CreateWorldWithTemplate
  fullName: ONITwitchLib.Utils.WorldUtil.CreateWorldWithTemplate
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Vector2I
  commentId: T:Vector2I
  isExternal: true
  name: Vector2I
  nameWithType: Vector2I
  fullName: Vector2I
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Action{WorldContainer}
  commentId: T:System.Action{WorldContainer}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<WorldContainer>
  nameWithType: Action<WorldContainer>
  fullName: System.Action<WorldContainer>
  nameWithType.vb: Action(Of WorldContainer)
  fullName.vb: System.Action(Of WorldContainer)
  name.vb: Action(Of WorldContainer)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: WorldContainer
    name: WorldContainer
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: WorldContainer
    name: WorldContainer
    isExternal: true
  - name: )
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ONITwitchLib.Utils.WorldUtil.FreeGridSpace*
  commentId: Overload:ONITwitchLib.Utils.WorldUtil.FreeGridSpace
  href: ONITwitchLib.Utils.WorldUtil.html#ONITwitchLib.Utils.WorldUtil.FreeGridSpace(Vector2I,Vector2I)
  name: FreeGridSpace
  nameWithType: WorldUtil.FreeGridSpace
  fullName: ONITwitchLib.Utils.WorldUtil.FreeGridSpace
- uid: ONITwitchLib.Utils.WorldUtil.RefreshWorldSelector*
  commentId: Overload:ONITwitchLib.Utils.WorldUtil.RefreshWorldSelector
  href: ONITwitchLib.Utils.WorldUtil.html#ONITwitchLib.Utils.WorldUtil.RefreshWorldSelector(System.Nullable{System.Int32})
  name: RefreshWorldSelector
  nameWithType: WorldUtil.RefreshWorldSelector
  fullName: ONITwitchLib.Utils.WorldUtil.RefreshWorldSelector
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ONITwitchLib.Utils.WorldUtil.AddDiagnostic*
  commentId: Overload:ONITwitchLib.Utils.WorldUtil.AddDiagnostic
  href: ONITwitchLib.Utils.WorldUtil.html#ONITwitchLib.Utils.WorldUtil.AddDiagnostic(System.Int32,ColonyDiagnostic,ColonyDiagnosticUtility.DisplaySetting)
  name: AddDiagnostic
  nameWithType: WorldUtil.AddDiagnostic
  fullName: ONITwitchLib.Utils.WorldUtil.AddDiagnostic
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ColonyDiagnostic
  commentId: T:ColonyDiagnostic
  isExternal: true
  name: ColonyDiagnostic
  nameWithType: ColonyDiagnostic
  fullName: ColonyDiagnostic
- uid: ColonyDiagnosticUtility.DisplaySetting
  commentId: T:ColonyDiagnosticUtility.DisplaySetting
  isExternal: true
  name: ColonyDiagnosticUtility.DisplaySetting
  nameWithType: ColonyDiagnosticUtility.DisplaySetting
  fullName: ColonyDiagnosticUtility.DisplaySetting
  spec.csharp:
  - uid: ColonyDiagnosticUtility
    name: ColonyDiagnosticUtility
    isExternal: true
  - name: .
  - uid: ColonyDiagnosticUtility.DisplaySetting
    name: DisplaySetting
    isExternal: true
  spec.vb:
  - uid: ColonyDiagnosticUtility
    name: ColonyDiagnosticUtility
    isExternal: true
  - name: .
  - uid: ColonyDiagnosticUtility.DisplaySetting
    name: DisplaySetting
    isExternal: true
