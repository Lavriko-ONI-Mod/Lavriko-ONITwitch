### YamlMime:ManagedReference
items:
- uid: ONITwitchLib.EventInfo
  commentId: T:ONITwitchLib.EventInfo
  id: EventInfo
  parent: ONITwitchLib
  children:
  - ONITwitchLib.EventInfo.AddCondition(System.Func{System.Object,System.Boolean})
  - ONITwitchLib.EventInfo.AddListener(System.Action{System.Object})
  - ONITwitchLib.EventInfo.CheckCondition(System.Object)
  - ONITwitchLib.EventInfo.Danger
  - ONITwitchLib.EventInfo.EventId
  - ONITwitchLib.EventInfo.EventNamespace
  - ONITwitchLib.EventInfo.FriendlyName
  - ONITwitchLib.EventInfo.Group
  - ONITwitchLib.EventInfo.Id
  - ONITwitchLib.EventInfo.RemoveListener(System.Action{System.Object})
  - ONITwitchLib.EventInfo.ToString
  - ONITwitchLib.EventInfo.Trigger(System.Object)
  langs:
  - csharp
  - vb
  name: EventInfo
  nameWithType: EventInfo
  fullName: ONITwitchLib.EventInfo
  type: Class
  source:
    remote:
      path: ONITwitchLib/EventInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: EventInfo
    path: ../ONITwitchLib/EventInfo.cs
    startLine: 11
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: Represents an event that is known to the <xref href="ONITwitchLib.EventManager" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class EventInfo
    content.vb: >-
      <PublicAPI>

      Public Class EventInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.EventInfo.Id
  commentId: P:ONITwitchLib.EventInfo.Id
  id: Id
  parent: ONITwitchLib.EventInfo
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: EventInfo.Id
  fullName: ONITwitchLib.EventInfo.Id
  type: Property
  source:
    remote:
      path: ONITwitchLib/EventInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: Id
    path: ../ONITwitchLib/EventInfo.cs
    startLine: 83
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: The full namespaced ID of the <xref href="ONITwitchLib.EventInfo" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      [Pure]

      [NotNull]

      public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <PublicAPI>

      <Pure>

      <NotNull>

      Public ReadOnly Property Id As String
  overload: ONITwitchLib.EventInfo.Id*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.EventInfo.FriendlyName
  commentId: P:ONITwitchLib.EventInfo.FriendlyName
  id: FriendlyName
  parent: ONITwitchLib.EventInfo
  langs:
  - csharp
  - vb
  name: FriendlyName
  nameWithType: EventInfo.FriendlyName
  fullName: ONITwitchLib.EventInfo.FriendlyName
  type: Property
  source:
    remote:
      path: ONITwitchLib/EventInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: FriendlyName
    path: ../ONITwitchLib/EventInfo.cs
    startLine: 91
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: The friendly name of the <xref href="ONITwitchLib.EventInfo" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      [CanBeNull]

      public string FriendlyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <PublicAPI>

      <CanBeNull>

      Public Property FriendlyName As String
  overload: ONITwitchLib.EventInfo.FriendlyName*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  - type: JetBrains.Annotations.CanBeNullAttribute
    ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.EventInfo.EventNamespace
  commentId: P:ONITwitchLib.EventInfo.EventNamespace
  id: EventNamespace
  parent: ONITwitchLib.EventInfo
  langs:
  - csharp
  - vb
  name: EventNamespace
  nameWithType: EventInfo.EventNamespace
  fullName: ONITwitchLib.EventInfo.EventNamespace
  type: Property
  source:
    remote:
      path: ONITwitchLib/EventInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: EventNamespace
    path: ../ONITwitchLib/EventInfo.cs
    startLine: 102
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: The namespace of the <xref href="ONITwitchLib.EventInfo" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      [Pure]

      [NotNull]

      public string EventNamespace { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <PublicAPI>

      <Pure>

      <NotNull>

      Public ReadOnly Property EventNamespace As String
  overload: ONITwitchLib.EventInfo.EventNamespace*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.EventInfo.EventId
  commentId: P:ONITwitchLib.EventInfo.EventId
  id: EventId
  parent: ONITwitchLib.EventInfo
  langs:
  - csharp
  - vb
  name: EventId
  nameWithType: EventInfo.EventId
  fullName: ONITwitchLib.EventInfo.EventId
  type: Property
  source:
    remote:
      path: ONITwitchLib/EventInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: EventId
    path: ../ONITwitchLib/EventInfo.cs
    startLine: 110
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: The ID of the <xref href="ONITwitchLib.EventInfo" data-throw-if-not-resolved="false"></xref>, without the <xref href="ONITwitchLib.EventInfo.EventNamespace" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      [Pure]

      [NotNull]

      public string EventId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <PublicAPI>

      <Pure>

      <NotNull>

      Public ReadOnly Property EventId As String
  overload: ONITwitchLib.EventInfo.EventId*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.EventInfo.Group
  commentId: P:ONITwitchLib.EventInfo.Group
  id: Group
  parent: ONITwitchLib.EventInfo
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: EventInfo.Group
  fullName: ONITwitchLib.EventInfo.Group
  type: Property
  source:
    remote:
      path: ONITwitchLib/EventInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: Group
    path: ../ONITwitchLib/EventInfo.cs
    startLine: 118
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: The <xref href="ONITwitchLib.EventGroup" data-throw-if-not-resolved="false"></xref> of the <xref href="ONITwitchLib.EventInfo" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      [NotNull]

      public EventGroup Group { get; }
    parameters: []
    return:
      type: ONITwitchLib.EventGroup
    content.vb: >-
      <PublicAPI>

      <NotNull>

      Public ReadOnly Property Group As EventGroup
  overload: ONITwitchLib.EventInfo.Group*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.EventInfo.Danger
  commentId: P:ONITwitchLib.EventInfo.Danger
  id: Danger
  parent: ONITwitchLib.EventInfo
  langs:
  - csharp
  - vb
  name: Danger
  nameWithType: EventInfo.Danger
  fullName: ONITwitchLib.EventInfo.Danger
  type: Property
  source:
    remote:
      path: ONITwitchLib/EventInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: Danger
    path: ../ONITwitchLib/EventInfo.cs
    startLine: 125
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: The <xref href="ONITwitchLib.Danger" data-throw-if-not-resolved="false"></xref> of the <xref href="ONITwitchLib.EventInfo" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      [CanBeNull]

      public Danger? Danger { get; set; }
    parameters: []
    return:
      type: System.Nullable{ONITwitchLib.Danger}
    content.vb: >-
      <PublicAPI>

      <CanBeNull>

      Public Property Danger As Danger?
  overload: ONITwitchLib.EventInfo.Danger*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  - type: JetBrains.Annotations.CanBeNullAttribute
    ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.EventInfo.AddListener(System.Action{System.Object})
  commentId: M:ONITwitchLib.EventInfo.AddListener(System.Action{System.Object})
  id: AddListener(System.Action{System.Object})
  parent: ONITwitchLib.EventInfo
  langs:
  - csharp
  - vb
  name: AddListener(Action<object>)
  nameWithType: EventInfo.AddListener(Action<object>)
  fullName: ONITwitchLib.EventInfo.AddListener(System.Action<object>)
  type: Method
  source:
    remote:
      path: ONITwitchLib/EventInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: AddListener
    path: ../ONITwitchLib/EventInfo.cs
    startLine: 149
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: Adds an <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> that is invoked with the event's data when the event is triggered.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public void AddListener(Action<object> listener)
    parameters:
    - id: listener
      type: System.Action{System.Object}
      description: The action to invoke when the event is triggered.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    content.vb: >-
      <PublicAPI>

      Public Sub AddListener(listener As Action(Of Object))
  overload: ONITwitchLib.EventInfo.AddListener*
  seealso:
  - linkId: ONITwitchLib.DataManager
    commentId: T:ONITwitchLib.DataManager
  - linkId: ONITwitchLib.EventInfo.Trigger(System.Object)
    commentId: M:ONITwitchLib.EventInfo.Trigger(System.Object)
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: EventInfo.AddListener(Action(Of Object))
  fullName.vb: ONITwitchLib.EventInfo.AddListener(System.Action(Of Object))
  name.vb: AddListener(Action(Of Object))
- uid: ONITwitchLib.EventInfo.RemoveListener(System.Action{System.Object})
  commentId: M:ONITwitchLib.EventInfo.RemoveListener(System.Action{System.Object})
  id: RemoveListener(System.Action{System.Object})
  parent: ONITwitchLib.EventInfo
  langs:
  - csharp
  - vb
  name: RemoveListener(Action<object>)
  nameWithType: EventInfo.RemoveListener(Action<object>)
  fullName: ONITwitchLib.EventInfo.RemoveListener(System.Action<object>)
  type: Method
  source:
    remote:
      path: ONITwitchLib/EventInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: RemoveListener
    path: ../ONITwitchLib/EventInfo.cs
    startLine: 161
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: >-
    Removes an <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> from the list of actions that are run when an event is triggered, if it

    exists.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public void RemoveListener(Action<object> listener)
    parameters:
    - id: listener
      type: System.Action{System.Object}
      description: The action to remove.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    content.vb: >-
      <PublicAPI>

      Public Sub RemoveListener(listener As Action(Of Object))
  overload: ONITwitchLib.EventInfo.RemoveListener*
  seealso:
  - linkId: ONITwitchLib.EventInfo.Trigger(System.Object)
    commentId: M:ONITwitchLib.EventInfo.Trigger(System.Object)
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: EventInfo.RemoveListener(Action(Of Object))
  fullName.vb: ONITwitchLib.EventInfo.RemoveListener(System.Action(Of Object))
  name.vb: RemoveListener(Action(Of Object))
- uid: ONITwitchLib.EventInfo.Trigger(System.Object)
  commentId: M:ONITwitchLib.EventInfo.Trigger(System.Object)
  id: Trigger(System.Object)
  parent: ONITwitchLib.EventInfo
  langs:
  - csharp
  - vb
  name: Trigger(object)
  nameWithType: EventInfo.Trigger(object)
  fullName: ONITwitchLib.EventInfo.Trigger(object)
  type: Method
  source:
    remote:
      path: ONITwitchLib/EventInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: Trigger
    path: ../ONITwitchLib/EventInfo.cs
    startLine: 174
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: >-
    Triggers the event with the specified data by calling each registered listener.

    Callers are expected to provide the correct type and values of data for this <xref href="ONITwitchLib.EventInfo" data-throw-if-not-resolved="false"></xref>.

    The correct data can typically be found in the <xref href="ONITwitchLib.DataManager" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public void Trigger(object data)
    parameters:
    - id: data
      type: System.Object
      description: The data to call each listener with.
    content.vb: >-
      <PublicAPI>

      Public Sub Trigger(data As Object)
  overload: ONITwitchLib.EventInfo.Trigger*
  seealso:
  - linkId: ONITwitchLib.EventInfo.AddListener(System.Action{System.Object})
    commentId: M:ONITwitchLib.EventInfo.AddListener(System.Action{System.Object})
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: EventInfo.Trigger(Object)
  fullName.vb: ONITwitchLib.EventInfo.Trigger(Object)
  name.vb: Trigger(Object)
- uid: ONITwitchLib.EventInfo.AddCondition(System.Func{System.Object,System.Boolean})
  commentId: M:ONITwitchLib.EventInfo.AddCondition(System.Func{System.Object,System.Boolean})
  id: AddCondition(System.Func{System.Object,System.Boolean})
  parent: ONITwitchLib.EventInfo
  langs:
  - csharp
  - vb
  name: AddCondition(Func<object, bool>)
  nameWithType: EventInfo.AddCondition(Func<object, bool>)
  fullName: ONITwitchLib.EventInfo.AddCondition(System.Func<object, bool>)
  type: Method
  source:
    remote:
      path: ONITwitchLib/EventInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: AddCondition
    path: ../ONITwitchLib/EventInfo.cs
    startLine: 190
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: Adds a condition to the event that should be run to determine if the event should run.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public void AddCondition(Func<object, bool> condition)
    parameters:
    - id: condition
      type: System.Func{System.Object,System.Boolean}
      description: >-
        A function that takes an object parameter to be called with the event's data,

        and returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the event should be run and <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if it should not.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    content.vb: >-
      <PublicAPI>

      Public Sub AddCondition(condition As Func(Of Object, Boolean))
  overload: ONITwitchLib.EventInfo.AddCondition*
  seealso:
  - linkId: ONITwitchLib.EventInfo.Trigger(System.Object)
    commentId: M:ONITwitchLib.EventInfo.Trigger(System.Object)
  - linkId: ONITwitchLib.DataManager
    commentId: T:ONITwitchLib.DataManager
  - linkId: ONITwitchLib.EventInfo.CheckCondition(System.Object)
    commentId: M:ONITwitchLib.EventInfo.CheckCondition(System.Object)
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: EventInfo.AddCondition(Func(Of Object, Boolean))
  fullName.vb: ONITwitchLib.EventInfo.AddCondition(System.Func(Of Object, Boolean))
  name.vb: AddCondition(Func(Of Object, Boolean))
- uid: ONITwitchLib.EventInfo.CheckCondition(System.Object)
  commentId: M:ONITwitchLib.EventInfo.CheckCondition(System.Object)
  id: CheckCondition(System.Object)
  parent: ONITwitchLib.EventInfo
  langs:
  - csharp
  - vb
  name: CheckCondition(object)
  nameWithType: EventInfo.CheckCondition(object)
  fullName: ONITwitchLib.EventInfo.CheckCondition(object)
  type: Method
  source:
    remote:
      path: ONITwitchLib/EventInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: CheckCondition
    path: ../ONITwitchLib/EventInfo.cs
    startLine: 204
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: >-
    Checks whether an event should be run by invoking each of its conditions and returning <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>

    if any of the conditions return <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public bool CheckCondition(object data)
    parameters:
    - id: data
      type: System.Object
      description: The data to be passed to each condition.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if any of the conditions return false, otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
    content.vb: >-
      <PublicAPI>

      Public Function CheckCondition(data As Object) As Boolean
  overload: ONITwitchLib.EventInfo.CheckCondition*
  seealso:
  - linkId: ONITwitchLib.EventInfo.AddCondition(System.Func{System.Object,System.Boolean})
    commentId: M:ONITwitchLib.EventInfo.AddCondition(System.Func{System.Object,System.Boolean})
  - linkId: ONITwitchLib.EventInfo.Trigger(System.Object)
    commentId: M:ONITwitchLib.EventInfo.Trigger(System.Object)
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: EventInfo.CheckCondition(Object)
  fullName.vb: ONITwitchLib.EventInfo.CheckCondition(Object)
  name.vb: CheckCondition(Object)
- uid: ONITwitchLib.EventInfo.ToString
  commentId: M:ONITwitchLib.EventInfo.ToString
  id: ToString
  parent: ONITwitchLib.EventInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: EventInfo.ToString()
  fullName: ONITwitchLib.EventInfo.ToString()
  type: Method
  source:
    remote:
      path: ONITwitchLib/EventInfo.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: ToString
    path: ../ONITwitchLib/EventInfo.cs
    startLine: 218
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: Gets a string representation of the event.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The friendly name of the event, if it exists, or the ID of the event otherwise.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: ONITwitchLib.EventInfo.ToString*
  seealso:
  - linkId: ONITwitchLib.EventInfo.FriendlyName
    commentId: P:ONITwitchLib.EventInfo.FriendlyName
  - linkId: ONITwitchLib.EventInfo.Id
    commentId: P:ONITwitchLib.EventInfo.Id
  - linkId: ONITwitchLib.EventInfo.EventNamespace
    commentId: P:ONITwitchLib.EventInfo.EventNamespace
  - linkId: ONITwitchLib.EventInfo.EventId
    commentId: P:ONITwitchLib.EventInfo.EventId
references:
- uid: ONITwitchLib.EventManager
  commentId: T:ONITwitchLib.EventManager
  parent: ONITwitchLib
  href: ONITwitchLib.EventManager.html
  name: EventManager
  nameWithType: EventManager
  fullName: ONITwitchLib.EventManager
- uid: ONITwitchLib
  commentId: N:ONITwitchLib
  href: ONITwitchLib.html
  name: ONITwitchLib
  nameWithType: ONITwitchLib
  fullName: ONITwitchLib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ONITwitchLib.EventInfo
  commentId: T:ONITwitchLib.EventInfo
  parent: ONITwitchLib
  href: ONITwitchLib.EventInfo.html
  name: EventInfo
  nameWithType: EventInfo
  fullName: ONITwitchLib.EventInfo
- uid: ONITwitchLib.EventInfo.Id*
  commentId: Overload:ONITwitchLib.EventInfo.Id
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.Id
  name: Id
  nameWithType: EventInfo.Id
  fullName: ONITwitchLib.EventInfo.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ONITwitchLib.EventInfo.FriendlyName*
  commentId: Overload:ONITwitchLib.EventInfo.FriendlyName
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.FriendlyName
  name: FriendlyName
  nameWithType: EventInfo.FriendlyName
  fullName: ONITwitchLib.EventInfo.FriendlyName
- uid: ONITwitchLib.EventInfo.EventNamespace*
  commentId: Overload:ONITwitchLib.EventInfo.EventNamespace
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.EventNamespace
  name: EventNamespace
  nameWithType: EventInfo.EventNamespace
  fullName: ONITwitchLib.EventInfo.EventNamespace
- uid: ONITwitchLib.EventInfo.EventNamespace
  commentId: P:ONITwitchLib.EventInfo.EventNamespace
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.EventNamespace
  name: EventNamespace
  nameWithType: EventInfo.EventNamespace
  fullName: ONITwitchLib.EventInfo.EventNamespace
- uid: ONITwitchLib.EventInfo.EventId*
  commentId: Overload:ONITwitchLib.EventInfo.EventId
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.EventId
  name: EventId
  nameWithType: EventInfo.EventId
  fullName: ONITwitchLib.EventInfo.EventId
- uid: ONITwitchLib.EventGroup
  commentId: T:ONITwitchLib.EventGroup
  parent: ONITwitchLib
  href: ONITwitchLib.EventGroup.html
  name: EventGroup
  nameWithType: EventGroup
  fullName: ONITwitchLib.EventGroup
- uid: ONITwitchLib.EventInfo.Group*
  commentId: Overload:ONITwitchLib.EventInfo.Group
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.Group
  name: Group
  nameWithType: EventInfo.Group
  fullName: ONITwitchLib.EventInfo.Group
- uid: ONITwitchLib.Danger
  commentId: T:ONITwitchLib.Danger
  parent: ONITwitchLib
  href: ONITwitchLib.Danger.html
  name: Danger
  nameWithType: Danger
  fullName: ONITwitchLib.Danger
- uid: ONITwitchLib.EventInfo.Danger*
  commentId: Overload:ONITwitchLib.EventInfo.Danger
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.Danger
  name: Danger
  nameWithType: EventInfo.Danger
  fullName: ONITwitchLib.EventInfo.Danger
- uid: System.Nullable{ONITwitchLib.Danger}
  commentId: T:System.Nullable{ONITwitchLib.Danger}
  parent: System
  definition: System.Nullable`1
  href: ONITwitchLib.Danger.html
  name: Danger?
  nameWithType: Danger?
  fullName: ONITwitchLib.Danger?
  spec.csharp:
  - uid: ONITwitchLib.Danger
    name: Danger
    href: ONITwitchLib.Danger.html
  - name: '?'
  spec.vb:
  - uid: ONITwitchLib.Danger
    name: Danger
    href: ONITwitchLib.Danger.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ONITwitchLib.DataManager
  commentId: T:ONITwitchLib.DataManager
  parent: ONITwitchLib
  href: ONITwitchLib.DataManager.html
  name: DataManager
  nameWithType: DataManager
  fullName: ONITwitchLib.DataManager
- uid: ONITwitchLib.EventInfo.Trigger(System.Object)
  commentId: M:ONITwitchLib.EventInfo.Trigger(System.Object)
  isExternal: true
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.Trigger(System.Object)
  name: Trigger(object)
  nameWithType: EventInfo.Trigger(object)
  fullName: ONITwitchLib.EventInfo.Trigger(object)
  nameWithType.vb: EventInfo.Trigger(Object)
  fullName.vb: ONITwitchLib.EventInfo.Trigger(Object)
  name.vb: Trigger(Object)
  spec.csharp:
  - uid: ONITwitchLib.EventInfo.Trigger(System.Object)
    name: Trigger
    href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.Trigger(System.Object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: ONITwitchLib.EventInfo.Trigger(System.Object)
    name: Trigger
    href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.Trigger(System.Object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ONITwitchLib.EventInfo.AddListener*
  commentId: Overload:ONITwitchLib.EventInfo.AddListener
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.AddListener(System.Action{System.Object})
  name: AddListener
  nameWithType: EventInfo.AddListener
  fullName: ONITwitchLib.EventInfo.AddListener
- uid: System.Action{System.Object}
  commentId: T:System.Action{System.Object}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<object>
  nameWithType: Action<object>
  fullName: System.Action<object>
  nameWithType.vb: Action(Of Object)
  fullName.vb: System.Action(Of Object)
  name.vb: Action(Of Object)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: ONITwitchLib.EventInfo.RemoveListener*
  commentId: Overload:ONITwitchLib.EventInfo.RemoveListener
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.RemoveListener(System.Action{System.Object})
  name: RemoveListener
  nameWithType: EventInfo.RemoveListener
  fullName: ONITwitchLib.EventInfo.RemoveListener
- uid: ONITwitchLib.EventInfo.AddListener(System.Action{System.Object})
  commentId: M:ONITwitchLib.EventInfo.AddListener(System.Action{System.Object})
  isExternal: true
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.AddListener(System.Action{System.Object})
  name: AddListener(Action<object>)
  nameWithType: EventInfo.AddListener(Action<object>)
  fullName: ONITwitchLib.EventInfo.AddListener(System.Action<object>)
  nameWithType.vb: EventInfo.AddListener(Action(Of Object))
  fullName.vb: ONITwitchLib.EventInfo.AddListener(System.Action(Of Object))
  name.vb: AddListener(Action(Of Object))
  spec.csharp:
  - uid: ONITwitchLib.EventInfo.AddListener(System.Action{System.Object})
    name: AddListener
    href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.AddListener(System.Action{System.Object})
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: )
  spec.vb:
  - uid: ONITwitchLib.EventInfo.AddListener(System.Action{System.Object})
    name: AddListener
    href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.AddListener(System.Action{System.Object})
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: ONITwitchLib.EventInfo.Trigger*
  commentId: Overload:ONITwitchLib.EventInfo.Trigger
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.Trigger(System.Object)
  name: Trigger
  nameWithType: EventInfo.Trigger
  fullName: ONITwitchLib.EventInfo.Trigger
- uid: ONITwitchLib.EventInfo.CheckCondition(System.Object)
  commentId: M:ONITwitchLib.EventInfo.CheckCondition(System.Object)
  isExternal: true
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.CheckCondition(System.Object)
  name: CheckCondition(object)
  nameWithType: EventInfo.CheckCondition(object)
  fullName: ONITwitchLib.EventInfo.CheckCondition(object)
  nameWithType.vb: EventInfo.CheckCondition(Object)
  fullName.vb: ONITwitchLib.EventInfo.CheckCondition(Object)
  name.vb: CheckCondition(Object)
  spec.csharp:
  - uid: ONITwitchLib.EventInfo.CheckCondition(System.Object)
    name: CheckCondition
    href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.CheckCondition(System.Object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: ONITwitchLib.EventInfo.CheckCondition(System.Object)
    name: CheckCondition
    href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.CheckCondition(System.Object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: ONITwitchLib.EventInfo.AddCondition*
  commentId: Overload:ONITwitchLib.EventInfo.AddCondition
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.AddCondition(System.Func{System.Object,System.Boolean})
  name: AddCondition
  nameWithType: EventInfo.AddCondition
  fullName: ONITwitchLib.EventInfo.AddCondition
- uid: System.Func{System.Object,System.Boolean}
  commentId: T:System.Func{System.Object,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<object, bool>
  nameWithType: Func<object, bool>
  fullName: System.Func<object, bool>
  nameWithType.vb: Func(Of Object, Boolean)
  fullName.vb: System.Func(Of Object, Boolean)
  name.vb: Func(Of Object, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: ONITwitchLib.EventInfo.AddCondition(System.Func{System.Object,System.Boolean})
  commentId: M:ONITwitchLib.EventInfo.AddCondition(System.Func{System.Object,System.Boolean})
  isExternal: true
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.AddCondition(System.Func{System.Object,System.Boolean})
  name: AddCondition(Func<object, bool>)
  nameWithType: EventInfo.AddCondition(Func<object, bool>)
  fullName: ONITwitchLib.EventInfo.AddCondition(System.Func<object, bool>)
  nameWithType.vb: EventInfo.AddCondition(Func(Of Object, Boolean))
  fullName.vb: ONITwitchLib.EventInfo.AddCondition(System.Func(Of Object, Boolean))
  name.vb: AddCondition(Func(Of Object, Boolean))
  spec.csharp:
  - uid: ONITwitchLib.EventInfo.AddCondition(System.Func{System.Object,System.Boolean})
    name: AddCondition
    href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.AddCondition(System.Func{System.Object,System.Boolean})
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: ONITwitchLib.EventInfo.AddCondition(System.Func{System.Object,System.Boolean})
    name: AddCondition
    href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.AddCondition(System.Func{System.Object,System.Boolean})
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: ONITwitchLib.EventInfo.CheckCondition*
  commentId: Overload:ONITwitchLib.EventInfo.CheckCondition
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.CheckCondition(System.Object)
  name: CheckCondition
  nameWithType: EventInfo.CheckCondition
  fullName: ONITwitchLib.EventInfo.CheckCondition
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ONITwitchLib.EventInfo.FriendlyName
  commentId: P:ONITwitchLib.EventInfo.FriendlyName
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.FriendlyName
  name: FriendlyName
  nameWithType: EventInfo.FriendlyName
  fullName: ONITwitchLib.EventInfo.FriendlyName
- uid: ONITwitchLib.EventInfo.Id
  commentId: P:ONITwitchLib.EventInfo.Id
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.Id
  name: Id
  nameWithType: EventInfo.Id
  fullName: ONITwitchLib.EventInfo.Id
- uid: ONITwitchLib.EventInfo.EventId
  commentId: P:ONITwitchLib.EventInfo.EventId
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.EventId
  name: EventId
  nameWithType: EventInfo.EventId
  fullName: ONITwitchLib.EventInfo.EventId
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: ONITwitchLib.EventInfo.ToString*
  commentId: Overload:ONITwitchLib.EventInfo.ToString
  href: ONITwitchLib.EventInfo.html#ONITwitchLib.EventInfo.ToString
  name: ToString
  nameWithType: EventInfo.ToString
  fullName: ONITwitchLib.EventInfo.ToString
