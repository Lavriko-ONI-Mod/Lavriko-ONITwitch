### YamlMime:ManagedReference
items:
- uid: ONITwitchLib.Core.TwitchDeckManager
  commentId: T:ONITwitchLib.Core.TwitchDeckManager
  id: TwitchDeckManager
  parent: ONITwitchLib.Core
  children:
  - ONITwitchLib.Core.TwitchDeckManager.AddGroup(ONITwitchLib.EventGroup)
  - ONITwitchLib.Core.TwitchDeckManager.Draw
  - ONITwitchLib.Core.TwitchDeckManager.GetGroup(System.String)
  - ONITwitchLib.Core.TwitchDeckManager.GetGroups
  - ONITwitchLib.Core.TwitchDeckManager.Instance
  langs:
  - csharp
  - vb
  name: TwitchDeckManager
  nameWithType: TwitchDeckManager
  fullName: ONITwitchLib.Core.TwitchDeckManager
  type: Class
  source:
    remote:
      path: ONITwitchLib/Core/TwitchDeckManager.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: TwitchDeckManager
    path: ../ONITwitchLib/Core/TwitchDeckManager.cs
    startLine: 12
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: Provides methods to manipulate the deck of events
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class TwitchDeckManager
    content.vb: >-
      <PublicAPI>

      Public Class TwitchDeckManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Core.TwitchDeckManager.Instance
  commentId: P:ONITwitchLib.Core.TwitchDeckManager.Instance
  id: Instance
  parent: ONITwitchLib.Core.TwitchDeckManager
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: TwitchDeckManager.Instance
  fullName: ONITwitchLib.Core.TwitchDeckManager.Instance
  type: Property
  source:
    remote:
      path: ONITwitchLib/Core/TwitchDeckManager.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: Instance
    path: ../ONITwitchLib/Core/TwitchDeckManager.cs
    startLine: 51
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: The instance of the deck manager.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      [NotNull]

      public static TwitchDeckManager Instance { get; }
    parameters: []
    return:
      type: ONITwitchLib.Core.TwitchDeckManager
    content.vb: >-
      <PublicAPI>

      <NotNull>

      Public Shared ReadOnly Property Instance As TwitchDeckManager
  overload: ONITwitchLib.Core.TwitchDeckManager.Instance*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Core.TwitchDeckManager.AddGroup(ONITwitchLib.EventGroup)
  commentId: M:ONITwitchLib.Core.TwitchDeckManager.AddGroup(ONITwitchLib.EventGroup)
  id: AddGroup(ONITwitchLib.EventGroup)
  parent: ONITwitchLib.Core.TwitchDeckManager
  langs:
  - csharp
  - vb
  name: AddGroup(EventGroup)
  nameWithType: TwitchDeckManager.AddGroup(EventGroup)
  fullName: ONITwitchLib.Core.TwitchDeckManager.AddGroup(ONITwitchLib.EventGroup)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Core/TwitchDeckManager.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: AddGroup
    path: ../ONITwitchLib/Core/TwitchDeckManager.cs
    startLine: 59
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: Adds an <xref href="ONITwitchLib.EventGroup" data-throw-if-not-resolved="false"></xref> of actions to the deck
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public void AddGroup(EventGroup group)
    parameters:
    - id: group
      type: ONITwitchLib.EventGroup
      description: ''
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    content.vb: >-
      <PublicAPI>

      Public Sub AddGroup(group As EventGroup)
  overload: ONITwitchLib.Core.TwitchDeckManager.AddGroup*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Core.TwitchDeckManager.GetGroup(System.String)
  commentId: M:ONITwitchLib.Core.TwitchDeckManager.GetGroup(System.String)
  id: GetGroup(System.String)
  parent: ONITwitchLib.Core.TwitchDeckManager
  langs:
  - csharp
  - vb
  name: GetGroup(string)
  nameWithType: TwitchDeckManager.GetGroup(string)
  fullName: ONITwitchLib.Core.TwitchDeckManager.GetGroup(string)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Core/TwitchDeckManager.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: GetGroup
    path: ../ONITwitchLib/Core/TwitchDeckManager.cs
    startLine: 70
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: Gets the <xref href="ONITwitchLib.EventGroup" data-throw-if-not-resolved="false"></xref> with the name specified by <code class="paramref">name</code>, if it exists in the deck.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      [MustUseReturnValue("This retrieves a group without modifying anything")]

      [CanBeNull]

      public EventGroup GetGroup(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the group to retrieve.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    return:
      type: ONITwitchLib.EventGroup
      description: The group, if it exists, otherwise <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    content.vb: >-
      <PublicAPI>

      <MustUseReturnValue("This retrieves a group without modifying anything")>

      <CanBeNull>

      Public Function GetGroup(name As String) As EventGroup
  overload: ONITwitchLib.Core.TwitchDeckManager.GetGroup*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  - type: JetBrains.Annotations.MustUseReturnValueAttribute
    ctor: JetBrains.Annotations.MustUseReturnValueAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This retrieves a group without modifying anything
  - type: JetBrains.Annotations.CanBeNullAttribute
    ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
    arguments: []
  nameWithType.vb: TwitchDeckManager.GetGroup(String)
  fullName.vb: ONITwitchLib.Core.TwitchDeckManager.GetGroup(String)
  name.vb: GetGroup(String)
- uid: ONITwitchLib.Core.TwitchDeckManager.GetGroups
  commentId: M:ONITwitchLib.Core.TwitchDeckManager.GetGroups
  id: GetGroups
  parent: ONITwitchLib.Core.TwitchDeckManager
  langs:
  - csharp
  - vb
  name: GetGroups()
  nameWithType: TwitchDeckManager.GetGroups()
  fullName: ONITwitchLib.Core.TwitchDeckManager.GetGroups()
  type: Method
  source:
    remote:
      path: ONITwitchLib/Core/TwitchDeckManager.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: GetGroups
    path: ../ONITwitchLib/Core/TwitchDeckManager.cs
    startLine: 83
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: Gets all <xref href="ONITwitchLib.EventGroup" data-throw-if-not-resolved="false"></xref>s registered in the deck.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      [Pure]

      [NotNull]

      public IEnumerable<EventGroup> GetGroups()
    return:
      type: System.Collections.Generic.IEnumerable{ONITwitchLib.EventGroup}
      description: An enumerable containing the groups in the deck.
    content.vb: >-
      <PublicAPI>

      <Pure>

      <NotNull>

      Public Function GetGroups() As IEnumerable(Of EventGroup)
  overload: ONITwitchLib.Core.TwitchDeckManager.GetGroups*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Core.TwitchDeckManager.Draw
  commentId: M:ONITwitchLib.Core.TwitchDeckManager.Draw
  id: Draw
  parent: ONITwitchLib.Core.TwitchDeckManager
  langs:
  - csharp
  - vb
  name: Draw()
  nameWithType: TwitchDeckManager.Draw()
  fullName: ONITwitchLib.Core.TwitchDeckManager.Draw()
  type: Method
  source:
    remote:
      path: ONITwitchLib/Core/TwitchDeckManager.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: Draw
    path: ../ONITwitchLib/Core/TwitchDeckManager.cs
    startLine: 95
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: Draws an <xref href="ONITwitchLib.EventInfo" data-throw-if-not-resolved="false"></xref> from the deck, shuffling if necessary.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      [MustUseReturnValue]

      [CanBeNull]

      public EventInfo Draw()
    return:
      type: ONITwitchLib.EventInfo
      description: The drawn event.
    content.vb: >-
      <PublicAPI>

      <MustUseReturnValue>

      <CanBeNull>

      Public Function Draw() As EventInfo
  overload: ONITwitchLib.Core.TwitchDeckManager.Draw*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  - type: JetBrains.Annotations.MustUseReturnValueAttribute
    ctor: JetBrains.Annotations.MustUseReturnValueAttribute.#ctor
    arguments: []
  - type: JetBrains.Annotations.CanBeNullAttribute
    ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
    arguments: []
references:
- uid: ONITwitchLib.Core
  commentId: N:ONITwitchLib.Core
  href: ONITwitchLib.html
  name: ONITwitchLib.Core
  nameWithType: ONITwitchLib.Core
  fullName: ONITwitchLib.Core
  spec.csharp:
  - uid: ONITwitchLib
    name: ONITwitchLib
    href: ONITwitchLib.html
  - name: .
  - uid: ONITwitchLib.Core
    name: Core
    href: ONITwitchLib.Core.html
  spec.vb:
  - uid: ONITwitchLib
    name: ONITwitchLib
    href: ONITwitchLib.html
  - name: .
  - uid: ONITwitchLib.Core
    name: Core
    href: ONITwitchLib.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ONITwitchLib.Core.TwitchDeckManager.Instance*
  commentId: Overload:ONITwitchLib.Core.TwitchDeckManager.Instance
  href: ONITwitchLib.Core.TwitchDeckManager.html#ONITwitchLib.Core.TwitchDeckManager.Instance
  name: Instance
  nameWithType: TwitchDeckManager.Instance
  fullName: ONITwitchLib.Core.TwitchDeckManager.Instance
- uid: ONITwitchLib.Core.TwitchDeckManager
  commentId: T:ONITwitchLib.Core.TwitchDeckManager
  parent: ONITwitchLib.Core
  href: ONITwitchLib.Core.TwitchDeckManager.html
  name: TwitchDeckManager
  nameWithType: TwitchDeckManager
  fullName: ONITwitchLib.Core.TwitchDeckManager
- uid: ONITwitchLib.EventGroup
  commentId: T:ONITwitchLib.EventGroup
  parent: ONITwitchLib
  href: ONITwitchLib.EventGroup.html
  name: EventGroup
  nameWithType: EventGroup
  fullName: ONITwitchLib.EventGroup
- uid: ONITwitchLib.Core.TwitchDeckManager.AddGroup*
  commentId: Overload:ONITwitchLib.Core.TwitchDeckManager.AddGroup
  href: ONITwitchLib.Core.TwitchDeckManager.html#ONITwitchLib.Core.TwitchDeckManager.AddGroup(ONITwitchLib.EventGroup)
  name: AddGroup
  nameWithType: TwitchDeckManager.AddGroup
  fullName: ONITwitchLib.Core.TwitchDeckManager.AddGroup
- uid: ONITwitchLib
  commentId: N:ONITwitchLib
  href: ONITwitchLib.html
  name: ONITwitchLib
  nameWithType: ONITwitchLib
  fullName: ONITwitchLib
- uid: ONITwitchLib.Core.TwitchDeckManager.GetGroup*
  commentId: Overload:ONITwitchLib.Core.TwitchDeckManager.GetGroup
  href: ONITwitchLib.Core.TwitchDeckManager.html#ONITwitchLib.Core.TwitchDeckManager.GetGroup(System.String)
  name: GetGroup
  nameWithType: TwitchDeckManager.GetGroup
  fullName: ONITwitchLib.Core.TwitchDeckManager.GetGroup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ONITwitchLib.Core.TwitchDeckManager.GetGroups*
  commentId: Overload:ONITwitchLib.Core.TwitchDeckManager.GetGroups
  href: ONITwitchLib.Core.TwitchDeckManager.html#ONITwitchLib.Core.TwitchDeckManager.GetGroups
  name: GetGroups
  nameWithType: TwitchDeckManager.GetGroups
  fullName: ONITwitchLib.Core.TwitchDeckManager.GetGroups
- uid: System.Collections.Generic.IEnumerable{ONITwitchLib.EventGroup}
  commentId: T:System.Collections.Generic.IEnumerable{ONITwitchLib.EventGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<EventGroup>
  nameWithType: IEnumerable<EventGroup>
  fullName: System.Collections.Generic.IEnumerable<ONITwitchLib.EventGroup>
  nameWithType.vb: IEnumerable(Of EventGroup)
  fullName.vb: System.Collections.Generic.IEnumerable(Of ONITwitchLib.EventGroup)
  name.vb: IEnumerable(Of EventGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ONITwitchLib.EventGroup
    name: EventGroup
    href: ONITwitchLib.EventGroup.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ONITwitchLib.EventGroup
    name: EventGroup
    href: ONITwitchLib.EventGroup.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ONITwitchLib.EventInfo
  commentId: T:ONITwitchLib.EventInfo
  parent: ONITwitchLib
  href: ONITwitchLib.EventInfo.html
  name: EventInfo
  nameWithType: EventInfo
  fullName: ONITwitchLib.EventInfo
- uid: ONITwitchLib.Core.TwitchDeckManager.Draw*
  commentId: Overload:ONITwitchLib.Core.TwitchDeckManager.Draw
  href: ONITwitchLib.Core.TwitchDeckManager.html#ONITwitchLib.Core.TwitchDeckManager.Draw
  name: Draw
  nameWithType: TwitchDeckManager.Draw
  fullName: ONITwitchLib.Core.TwitchDeckManager.Draw
