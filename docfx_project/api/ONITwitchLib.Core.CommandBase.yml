### YamlMime:ManagedReference
items:
- uid: ONITwitchLib.Core.CommandBase
  commentId: T:ONITwitchLib.Core.CommandBase
  id: CommandBase
  parent: ONITwitchLib.Core
  children:
  - ONITwitchLib.Core.CommandBase.#ctor(System.Object)
  - ONITwitchLib.Core.CommandBase.#ctor(System.Type,System.Object[])
  - ONITwitchLib.Core.CommandBase.GetConditionFunc
  - ONITwitchLib.Core.CommandBase.GetRunAction
  langs:
  - csharp
  - vb
  name: CommandBase
  nameWithType: CommandBase
  fullName: ONITwitchLib.Core.CommandBase
  type: Class
  source:
    remote:
      path: ONITwitchLib/Core/CommandBase.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: CommandBase
    path: ../ONITwitchLib/Core/CommandBase.cs
    startLine: 10
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: Methods for accessing the core Twitch mod's commands.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class CommandBase
    content.vb: >-
      <PublicAPI>

      Public Class CommandBase
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Core.CommandBase.#ctor(System.Type,System.Object[])
  commentId: M:ONITwitchLib.Core.CommandBase.#ctor(System.Type,System.Object[])
  id: '#ctor(System.Type,System.Object[])'
  parent: ONITwitchLib.Core.CommandBase
  langs:
  - csharp
  - vb
  name: CommandBase(Type, params object[])
  nameWithType: CommandBase.CommandBase(Type, params object[])
  fullName: ONITwitchLib.Core.CommandBase.CommandBase(System.Type, params object[])
  type: Constructor
  source:
    remote:
      path: ONITwitchLib/Core/CommandBase.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: .ctor
    path: ../ONITwitchLib/Core/CommandBase.cs
    startLine: 34
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: Instantiates a <xref href="ONITwitchLib.Core.CommandBase" data-throw-if-not-resolved="false"></xref> using a type and its arguments.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public CommandBase(Type commandType, params object[] args)
    parameters:
    - id: commandType
      type: System.Type
      description: A type deriving from the core mod's <code>CommandBase</code> type.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: args
      type: System.Object[]
      description: The arguments for that type's constructor.
    content.vb: >-
      <PublicAPI>

      Public Sub New(commandType As Type, ParamArray args As Object())
  overload: ONITwitchLib.Core.CommandBase.#ctor*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: CommandBase.New(Type, ParamArray Object())
  fullName.vb: ONITwitchLib.Core.CommandBase.New(System.Type, ParamArray Object())
  name.vb: New(Type, ParamArray Object())
- uid: ONITwitchLib.Core.CommandBase.#ctor(System.Object)
  commentId: M:ONITwitchLib.Core.CommandBase.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: ONITwitchLib.Core.CommandBase
  langs:
  - csharp
  - vb
  name: CommandBase(object)
  nameWithType: CommandBase.CommandBase(object)
  fullName: ONITwitchLib.Core.CommandBase.CommandBase(object)
  type: Constructor
  source:
    remote:
      path: ONITwitchLib/Core/CommandBase.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: .ctor
    path: ../ONITwitchLib/Core/CommandBase.cs
    startLine: 52
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: Instantiates a <xref href="ONITwitchLib.Core.CommandBase" data-throw-if-not-resolved="false"></xref> using an instance of the core mod's <code>CommandBase</code>.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public CommandBase(object inst)
    parameters:
    - id: inst
      type: System.Object
      description: The instance to use.
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    content.vb: >-
      <PublicAPI>

      Public Sub New(inst As Object)
  overload: ONITwitchLib.Core.CommandBase.#ctor*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: CommandBase.New(Object)
  fullName.vb: ONITwitchLib.Core.CommandBase.New(Object)
  name.vb: New(Object)
- uid: ONITwitchLib.Core.CommandBase.GetRunAction
  commentId: M:ONITwitchLib.Core.CommandBase.GetRunAction
  id: GetRunAction
  parent: ONITwitchLib.Core.CommandBase
  langs:
  - csharp
  - vb
  name: GetRunAction()
  nameWithType: CommandBase.GetRunAction()
  fullName: ONITwitchLib.Core.CommandBase.GetRunAction()
  type: Method
  source:
    remote:
      path: ONITwitchLib/Core/CommandBase.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: GetRunAction
    path: ../ONITwitchLib/Core/CommandBase.cs
    startLine: 71
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: Gets the action that this command will run.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public Action<object> GetRunAction()
    return:
      type: System.Action{System.Object}
      description: An <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> that will call the command.
    content.vb: >-
      <PublicAPI>

      Public Function GetRunAction() As Action(Of Object)
  overload: ONITwitchLib.Core.CommandBase.GetRunAction*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Core.CommandBase.GetConditionFunc
  commentId: M:ONITwitchLib.Core.CommandBase.GetConditionFunc
  id: GetConditionFunc
  parent: ONITwitchLib.Core.CommandBase
  langs:
  - csharp
  - vb
  name: GetConditionFunc()
  nameWithType: CommandBase.GetConditionFunc()
  fullName: ONITwitchLib.Core.CommandBase.GetConditionFunc()
  type: Method
  source:
    remote:
      path: ONITwitchLib/Core/CommandBase.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: GetConditionFunc
    path: ../ONITwitchLib/Core/CommandBase.cs
    startLine: 81
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: Gets the action that this command will run to determine if it may run.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public Func<object, bool> GetConditionFunc()
    return:
      type: System.Func{System.Object,System.Boolean}
      description: An <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> that will call the command's condition.
    content.vb: >-
      <PublicAPI>

      Public Function GetConditionFunc() As Func(Of Object, Boolean)
  overload: ONITwitchLib.Core.CommandBase.GetConditionFunc*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
references:
- uid: ONITwitchLib.Core
  commentId: N:ONITwitchLib.Core
  href: ONITwitchLib.html
  name: ONITwitchLib.Core
  nameWithType: ONITwitchLib.Core
  fullName: ONITwitchLib.Core
  spec.csharp:
  - uid: ONITwitchLib
    name: ONITwitchLib
    href: ONITwitchLib.html
  - name: .
  - uid: ONITwitchLib.Core
    name: Core
    href: ONITwitchLib.Core.html
  spec.vb:
  - uid: ONITwitchLib
    name: ONITwitchLib
    href: ONITwitchLib.html
  - name: .
  - uid: ONITwitchLib.Core
    name: Core
    href: ONITwitchLib.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ONITwitchLib.Core.CommandBase
  commentId: T:ONITwitchLib.Core.CommandBase
  href: ONITwitchLib.Core.CommandBase.html
  name: CommandBase
  nameWithType: CommandBase
  fullName: ONITwitchLib.Core.CommandBase
- uid: ONITwitchLib.Core.CommandBase.#ctor*
  commentId: Overload:ONITwitchLib.Core.CommandBase.#ctor
  href: ONITwitchLib.Core.CommandBase.html#ONITwitchLib.Core.CommandBase.#ctor(System.Type,System.Object[])
  name: CommandBase
  nameWithType: CommandBase.CommandBase
  fullName: ONITwitchLib.Core.CommandBase.CommandBase
  nameWithType.vb: CommandBase.New
  fullName.vb: ONITwitchLib.Core.CommandBase.New
  name.vb: New
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ONITwitchLib.Core.CommandBase.GetRunAction*
  commentId: Overload:ONITwitchLib.Core.CommandBase.GetRunAction
  href: ONITwitchLib.Core.CommandBase.html#ONITwitchLib.Core.CommandBase.GetRunAction
  name: GetRunAction
  nameWithType: CommandBase.GetRunAction
  fullName: ONITwitchLib.Core.CommandBase.GetRunAction
- uid: System.Action{System.Object}
  commentId: T:System.Action{System.Object}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<object>
  nameWithType: Action<object>
  fullName: System.Action<object>
  nameWithType.vb: Action(Of Object)
  fullName.vb: System.Action(Of Object)
  name.vb: Action(Of Object)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: ONITwitchLib.Core.CommandBase.GetConditionFunc*
  commentId: Overload:ONITwitchLib.Core.CommandBase.GetConditionFunc
  href: ONITwitchLib.Core.CommandBase.html#ONITwitchLib.Core.CommandBase.GetConditionFunc
  name: GetConditionFunc
  nameWithType: CommandBase.GetConditionFunc
  fullName: ONITwitchLib.Core.CommandBase.GetConditionFunc
- uid: System.Func{System.Object,System.Boolean}
  commentId: T:System.Func{System.Object,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<object, bool>
  nameWithType: Func<object, bool>
  fullName: System.Func<object, bool>
  nameWithType.vb: Func(Of Object, Boolean)
  fullName.vb: System.Func(Of Object, Boolean)
  name.vb: Func(Of Object, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
