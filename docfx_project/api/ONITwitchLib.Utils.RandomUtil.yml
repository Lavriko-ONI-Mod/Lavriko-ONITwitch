### YamlMime:ManagedReference
items:
- uid: ONITwitchLib.Utils.RandomUtil
  commentId: T:ONITwitchLib.Utils.RandomUtil
  id: RandomUtil
  parent: ONITwitchLib.Utils
  children:
  - ONITwitchLib.Utils.RandomUtil.OnUnitCircle
  - ONITwitchLib.Utils.RandomUtil.OnUnitCircleInRange(System.Single,System.Single)
  langs:
  - csharp
  - vb
  name: RandomUtil
  nameWithType: RandomUtil
  fullName: ONITwitchLib.Utils.RandomUtil
  type: Class
  source:
    remote:
      path: ONITwitchLib/Utils/RandomUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: RandomUtil
    path: ../ONITwitchLib/Utils/RandomUtil.cs
    startLine: 8
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: Utilities for creating random values.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static class RandomUtil
    content.vb: >-
      <PublicAPI>

      Public Module RandomUtil
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Utils.RandomUtil.OnUnitCircle
  commentId: M:ONITwitchLib.Utils.RandomUtil.OnUnitCircle
  id: OnUnitCircle
  parent: ONITwitchLib.Utils.RandomUtil
  langs:
  - csharp
  - vb
  name: OnUnitCircle()
  nameWithType: RandomUtil.OnUnitCircle()
  fullName: ONITwitchLib.Utils.RandomUtil.OnUnitCircle()
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/RandomUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: OnUnitCircle
    path: ../ONITwitchLib/Utils/RandomUtil.cs
    startLine: 15
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: Returns a random vector on a unit circle.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static Vector2 OnUnitCircle()
    return:
      type: UnityEngine.Vector2
      description: A random vector on a unit circle.
    content.vb: >-
      <PublicAPI>

      Public Shared Function OnUnitCircle() As Vector2
  overload: ONITwitchLib.Utils.RandomUtil.OnUnitCircle*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Utils.RandomUtil.OnUnitCircleInRange(System.Single,System.Single)
  commentId: M:ONITwitchLib.Utils.RandomUtil.OnUnitCircleInRange(System.Single,System.Single)
  id: OnUnitCircleInRange(System.Single,System.Single)
  parent: ONITwitchLib.Utils.RandomUtil
  langs:
  - csharp
  - vb
  name: OnUnitCircleInRange(float, float)
  nameWithType: RandomUtil.OnUnitCircleInRange(float, float)
  fullName: ONITwitchLib.Utils.RandomUtil.OnUnitCircleInRange(float, float)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/RandomUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: OnUnitCircleInRange
    path: ../ONITwitchLib/Utils/RandomUtil.cs
    startLine: 29
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: Returns a vector that is on the unit circle and within an angle range.
  remarks: Note that 0 degrees represents the vector (1, 0), and the angle increases counter-clockwise, such that 90 degrees is (0, 1).
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static Vector2 OnUnitCircleInRange(float minAngleInclusive, float maxAngleExclusive)
    parameters:
    - id: minAngleInclusive
      type: System.Single
      description: The lower bound of the angle of the output vector in degrees, inclusive.
    - id: maxAngleExclusive
      type: System.Single
      description: The upper bound of the angle of the output vector in degrees, exclusive.
    return:
      type: UnityEngine.Vector2
      description: A vector with length one that has an angle between <code class="paramref">minAngleInclusive</code> and <code class="paramref">maxAngleExclusive</code>.
    content.vb: >-
      <PublicAPI>

      Public Shared Function OnUnitCircleInRange(minAngleInclusive As Single, maxAngleExclusive As Single) As Vector2
  overload: ONITwitchLib.Utils.RandomUtil.OnUnitCircleInRange*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
  nameWithType.vb: RandomUtil.OnUnitCircleInRange(Single, Single)
  fullName.vb: ONITwitchLib.Utils.RandomUtil.OnUnitCircleInRange(Single, Single)
  name.vb: OnUnitCircleInRange(Single, Single)
references:
- uid: ONITwitchLib.Utils
  commentId: N:ONITwitchLib.Utils
  href: ONITwitchLib.html
  name: ONITwitchLib.Utils
  nameWithType: ONITwitchLib.Utils
  fullName: ONITwitchLib.Utils
  spec.csharp:
  - uid: ONITwitchLib
    name: ONITwitchLib
    href: ONITwitchLib.html
  - name: .
  - uid: ONITwitchLib.Utils
    name: Utils
    href: ONITwitchLib.Utils.html
  spec.vb:
  - uid: ONITwitchLib
    name: ONITwitchLib
    href: ONITwitchLib.html
  - name: .
  - uid: ONITwitchLib.Utils
    name: Utils
    href: ONITwitchLib.Utils.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ONITwitchLib.Utils.RandomUtil.OnUnitCircle*
  commentId: Overload:ONITwitchLib.Utils.RandomUtil.OnUnitCircle
  href: ONITwitchLib.Utils.RandomUtil.html#ONITwitchLib.Utils.RandomUtil.OnUnitCircle
  name: OnUnitCircle
  nameWithType: RandomUtil.OnUnitCircle
  fullName: ONITwitchLib.Utils.RandomUtil.OnUnitCircle
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: ONITwitchLib.Utils.RandomUtil.OnUnitCircleInRange*
  commentId: Overload:ONITwitchLib.Utils.RandomUtil.OnUnitCircleInRange
  href: ONITwitchLib.Utils.RandomUtil.html#ONITwitchLib.Utils.RandomUtil.OnUnitCircleInRange(System.Single,System.Single)
  name: OnUnitCircleInRange
  nameWithType: RandomUtil.OnUnitCircleInRange
  fullName: ONITwitchLib.Utils.RandomUtil.OnUnitCircleInRange
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
