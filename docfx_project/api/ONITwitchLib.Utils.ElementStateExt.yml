### YamlMime:ManagedReference
items:
- uid: ONITwitchLib.Utils.ElementStateExt
  commentId: T:ONITwitchLib.Utils.ElementStateExt
  id: ElementStateExt
  parent: ONITwitchLib.Utils
  children:
  - ONITwitchLib.Utils.ElementStateExt.IsGas(Element.State)
  - ONITwitchLib.Utils.ElementStateExt.IsLiquid(Element.State)
  - ONITwitchLib.Utils.ElementStateExt.IsSolid(Element.State)
  - ONITwitchLib.Utils.ElementStateExt.IsVacuum(Element.State)
  langs:
  - csharp
  - vb
  name: ElementStateExt
  nameWithType: ElementStateExt
  fullName: ONITwitchLib.Utils.ElementStateExt
  type: Class
  source:
    remote:
      path: ONITwitchLib/Utils/ElementUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: ElementStateExt
    path: ../ONITwitchLib/Utils/ElementUtil.cs
    startLine: 63
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: Utilities for inspecting the values of <xref href="Element.State" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static class ElementStateExt
    content.vb: >-
      <PublicAPI>

      Public Module ElementStateExt
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Utils.ElementStateExt.IsSolid(Element.State)
  commentId: M:ONITwitchLib.Utils.ElementStateExt.IsSolid(Element.State)
  id: IsSolid(Element.State)
  isExtensionMethod: true
  parent: ONITwitchLib.Utils.ElementStateExt
  langs:
  - csharp
  - vb
  name: IsSolid(State)
  nameWithType: ElementStateExt.IsSolid(Element.State)
  fullName: ONITwitchLib.Utils.ElementStateExt.IsSolid(Element.State)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/ElementUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: IsSolid
    path: ../ONITwitchLib/Utils/ElementUtil.cs
    startLine: 71
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: Determines if this state is solid.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static bool IsSolid(this Element.State state)
    parameters:
    - id: state
      type: Element.State
      description: The state to check.
    return:
      type: System.Boolean
      description: Whether the state is considered solid.
    content.vb: >-
      <PublicAPI>

      Public Shared Function IsSolid(state As Element.State) As Boolean
  overload: ONITwitchLib.Utils.ElementStateExt.IsSolid*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Utils.ElementStateExt.IsLiquid(Element.State)
  commentId: M:ONITwitchLib.Utils.ElementStateExt.IsLiquid(Element.State)
  id: IsLiquid(Element.State)
  isExtensionMethod: true
  parent: ONITwitchLib.Utils.ElementStateExt
  langs:
  - csharp
  - vb
  name: IsLiquid(State)
  nameWithType: ElementStateExt.IsLiquid(Element.State)
  fullName: ONITwitchLib.Utils.ElementStateExt.IsLiquid(Element.State)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/ElementUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: IsLiquid
    path: ../ONITwitchLib/Utils/ElementUtil.cs
    startLine: 83
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: Determines if this state is liquid.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static bool IsLiquid(this Element.State state)
    parameters:
    - id: state
      type: Element.State
      description: The state to check.
    return:
      type: System.Boolean
      description: Whether the state is considered liquid.
    content.vb: >-
      <PublicAPI>

      Public Shared Function IsLiquid(state As Element.State) As Boolean
  overload: ONITwitchLib.Utils.ElementStateExt.IsLiquid*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Utils.ElementStateExt.IsGas(Element.State)
  commentId: M:ONITwitchLib.Utils.ElementStateExt.IsGas(Element.State)
  id: IsGas(Element.State)
  isExtensionMethod: true
  parent: ONITwitchLib.Utils.ElementStateExt
  langs:
  - csharp
  - vb
  name: IsGas(State)
  nameWithType: ElementStateExt.IsGas(Element.State)
  fullName: ONITwitchLib.Utils.ElementStateExt.IsGas(Element.State)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/ElementUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: IsGas
    path: ../ONITwitchLib/Utils/ElementUtil.cs
    startLine: 95
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: Determines if this state is gas.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static bool IsGas(this Element.State state)
    parameters:
    - id: state
      type: Element.State
      description: The state to check.
    return:
      type: System.Boolean
      description: Whether the state is considered gas.
    content.vb: >-
      <PublicAPI>

      Public Shared Function IsGas(state As Element.State) As Boolean
  overload: ONITwitchLib.Utils.ElementStateExt.IsGas*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Utils.ElementStateExt.IsVacuum(Element.State)
  commentId: M:ONITwitchLib.Utils.ElementStateExt.IsVacuum(Element.State)
  id: IsVacuum(Element.State)
  isExtensionMethod: true
  parent: ONITwitchLib.Utils.ElementStateExt
  langs:
  - csharp
  - vb
  name: IsVacuum(State)
  nameWithType: ElementStateExt.IsVacuum(Element.State)
  fullName: ONITwitchLib.Utils.ElementStateExt.IsVacuum(Element.State)
  type: Method
  source:
    remote:
      path: ONITwitchLib/Utils/ElementUtil.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: IsVacuum
    path: ../ONITwitchLib/Utils/ElementUtil.cs
    startLine: 107
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Utils
  summary: Determines if this state is vacuum.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static bool IsVacuum(this Element.State state)
    parameters:
    - id: state
      type: Element.State
      description: The state to check.
    return:
      type: System.Boolean
      description: Whether the state is considered vacuum.
    content.vb: >-
      <PublicAPI>

      Public Shared Function IsVacuum(state As Element.State) As Boolean
  overload: ONITwitchLib.Utils.ElementStateExt.IsVacuum*
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
references:
- uid: Element.State
  commentId: T:Element.State
  isExternal: true
  name: Element.State
  nameWithType: Element.State
  fullName: Element.State
  spec.csharp:
  - uid: Element
    name: Element
    isExternal: true
  - name: .
  - uid: Element.State
    name: State
    isExternal: true
  spec.vb:
  - uid: Element
    name: Element
    isExternal: true
  - name: .
  - uid: Element.State
    name: State
    isExternal: true
- uid: ONITwitchLib.Utils
  commentId: N:ONITwitchLib.Utils
  href: ONITwitchLib.html
  name: ONITwitchLib.Utils
  nameWithType: ONITwitchLib.Utils
  fullName: ONITwitchLib.Utils
  spec.csharp:
  - uid: ONITwitchLib
    name: ONITwitchLib
    href: ONITwitchLib.html
  - name: .
  - uid: ONITwitchLib.Utils
    name: Utils
    href: ONITwitchLib.Utils.html
  spec.vb:
  - uid: ONITwitchLib
    name: ONITwitchLib
    href: ONITwitchLib.html
  - name: .
  - uid: ONITwitchLib.Utils
    name: Utils
    href: ONITwitchLib.Utils.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ONITwitchLib.Utils.ElementStateExt.IsSolid*
  commentId: Overload:ONITwitchLib.Utils.ElementStateExt.IsSolid
  href: ONITwitchLib.Utils.ElementStateExt.html#ONITwitchLib.Utils.ElementStateExt.IsSolid(Element.State)
  name: IsSolid
  nameWithType: ElementStateExt.IsSolid
  fullName: ONITwitchLib.Utils.ElementStateExt.IsSolid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ONITwitchLib.Utils.ElementStateExt.IsLiquid*
  commentId: Overload:ONITwitchLib.Utils.ElementStateExt.IsLiquid
  href: ONITwitchLib.Utils.ElementStateExt.html#ONITwitchLib.Utils.ElementStateExt.IsLiquid(Element.State)
  name: IsLiquid
  nameWithType: ElementStateExt.IsLiquid
  fullName: ONITwitchLib.Utils.ElementStateExt.IsLiquid
- uid: ONITwitchLib.Utils.ElementStateExt.IsGas*
  commentId: Overload:ONITwitchLib.Utils.ElementStateExt.IsGas
  href: ONITwitchLib.Utils.ElementStateExt.html#ONITwitchLib.Utils.ElementStateExt.IsGas(Element.State)
  name: IsGas
  nameWithType: ElementStateExt.IsGas
  fullName: ONITwitchLib.Utils.ElementStateExt.IsGas
- uid: ONITwitchLib.Utils.ElementStateExt.IsVacuum*
  commentId: Overload:ONITwitchLib.Utils.ElementStateExt.IsVacuum
  href: ONITwitchLib.Utils.ElementStateExt.html#ONITwitchLib.Utils.ElementStateExt.IsVacuum(Element.State)
  name: IsVacuum
  nameWithType: ElementStateExt.IsVacuum
  fullName: ONITwitchLib.Utils.ElementStateExt.IsVacuum
