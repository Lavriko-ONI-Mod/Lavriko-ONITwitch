### YamlMime:ManagedReference
items:
- uid: ONITwitchLib.ThreadRandom
  commentId: T:ONITwitchLib.ThreadRandom
  id: ThreadRandom
  parent: ONITwitchLib
  children:
  - ONITwitchLib.ThreadRandom.Next
  - ONITwitchLib.ThreadRandom.Next(System.Int32)
  - ONITwitchLib.ThreadRandom.Next(System.Int32,System.Int32)
  - ONITwitchLib.ThreadRandom.NextBytes(System.Byte[])
  - ONITwitchLib.ThreadRandom.NextDouble
  langs:
  - csharp
  - vb
  name: ThreadRandom
  nameWithType: ThreadRandom
  fullName: ONITwitchLib.ThreadRandom
  type: Class
  source:
    remote:
      path: ONITwitchLib/ThreadRandom.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: ThreadRandom
    path: ../ONITwitchLib/ThreadRandom.cs
    startLine: 7
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: A <xref href="System.Random" data-throw-if-not-resolved="false"></xref> that is safe to use from any thread.
  example: []
  syntax:
    content: public static class ThreadRandom
    content.vb: Public Module ThreadRandom
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ONITwitchLib.ThreadRandom.Next
  commentId: M:ONITwitchLib.ThreadRandom.Next
  id: Next
  parent: ONITwitchLib.ThreadRandom
  langs:
  - csharp
  - vb
  name: Next()
  nameWithType: ThreadRandom.Next()
  fullName: ONITwitchLib.ThreadRandom.Next()
  type: Method
  source:
    remote:
      path: ONITwitchLib/ThreadRandom.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: Next
    path: ../ONITwitchLib/ThreadRandom.cs
    startLine: 14
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: Returns a non-negative random integer.
  example: []
  syntax:
    content: public static int Next()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is greater than or equal to 0 and less than <xref href="System.Int32.MaxValue" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function [Next]() As Integer
  overload: ONITwitchLib.ThreadRandom.Next*
- uid: ONITwitchLib.ThreadRandom.Next(System.Int32)
  commentId: M:ONITwitchLib.ThreadRandom.Next(System.Int32)
  id: Next(System.Int32)
  parent: ONITwitchLib.ThreadRandom
  langs:
  - csharp
  - vb
  name: Next(int)
  nameWithType: ThreadRandom.Next(int)
  fullName: ONITwitchLib.ThreadRandom.Next(int)
  type: Method
  source:
    remote:
      path: ONITwitchLib/ThreadRandom.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: Next
    path: ../ONITwitchLib/ThreadRandom.cs
    startLine: 27
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: Returns a non-negative random integer that is less than the specified maximum.
  example: []
  syntax:
    content: public static int Next(int maxValue)
    parameters:
    - id: maxValue
      type: System.Int32
      description: The exclusive upper bound of the random number to be generated. <code class="paramref">maxValue</code> must be greater than or equal to 0.
    return:
      type: System.Int32
      description: A 32-bit signed integer that is greater than or equal to 0, and less than <code class="paramref">maxValue</code>; that is, the range of return values ordinarily includes 0 but not <code class="paramref">maxValue</code>. However, if <code class="paramref">maxValue</code> equals 0, <code class="paramref">maxValue</code> is returned.
    content.vb: Public Shared Function [Next](maxValue As Integer) As Integer
  overload: ONITwitchLib.ThreadRandom.Next*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">maxValue</code> is less than 0.
  nameWithType.vb: ThreadRandom.Next(Integer)
  fullName.vb: ONITwitchLib.ThreadRandom.Next(Integer)
  name.vb: Next(Integer)
- uid: ONITwitchLib.ThreadRandom.Next(System.Int32,System.Int32)
  commentId: M:ONITwitchLib.ThreadRandom.Next(System.Int32,System.Int32)
  id: Next(System.Int32,System.Int32)
  parent: ONITwitchLib.ThreadRandom
  langs:
  - csharp
  - vb
  name: Next(int, int)
  nameWithType: ThreadRandom.Next(int, int)
  fullName: ONITwitchLib.ThreadRandom.Next(int, int)
  type: Method
  source:
    remote:
      path: ONITwitchLib/ThreadRandom.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: Next
    path: ../ONITwitchLib/ThreadRandom.cs
    startLine: 41
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: Returns a random integer that is within a specified range.
  example: []
  syntax:
    content: public static int Next(int minValue, int maxValue)
    parameters:
    - id: minValue
      type: System.Int32
      description: The inclusive lower bound of the random number returned.
    - id: maxValue
      type: System.Int32
      description: The exclusive upper bound of the random number returned. <code class="paramref">maxValue</code> must be greater than or equal to <code class="paramref">minValue</code>.
    return:
      type: System.Int32
      description: A 32-bit signed integer greater than or equal to <code class="paramref">minValue</code> and less than <code class="paramref">maxValue</code>; that is, the range of return values includes <code class="paramref">minValue</code> but not <code class="paramref">maxValue</code>. If <code class="paramref">minValue</code> equals <code class="paramref">maxValue</code>, <code class="paramref">minValue</code> is returned.
    content.vb: Public Shared Function [Next](minValue As Integer, maxValue As Integer) As Integer
  overload: ONITwitchLib.ThreadRandom.Next*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">minValue</code> is greater than <code class="paramref">maxValue</code>.
  nameWithType.vb: ThreadRandom.Next(Integer, Integer)
  fullName.vb: ONITwitchLib.ThreadRandom.Next(Integer, Integer)
  name.vb: Next(Integer, Integer)
- uid: ONITwitchLib.ThreadRandom.NextBytes(System.Byte[])
  commentId: M:ONITwitchLib.ThreadRandom.NextBytes(System.Byte[])
  id: NextBytes(System.Byte[])
  parent: ONITwitchLib.ThreadRandom
  langs:
  - csharp
  - vb
  name: NextBytes(byte[])
  nameWithType: ThreadRandom.NextBytes(byte[])
  fullName: ONITwitchLib.ThreadRandom.NextBytes(byte[])
  type: Method
  source:
    remote:
      path: ONITwitchLib/ThreadRandom.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: NextBytes
    path: ../ONITwitchLib/ThreadRandom.cs
    startLine: 53
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: Fills the elements of a specified array of bytes with random numbers.
  example: []
  syntax:
    content: public static void NextBytes(byte[] buffer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes to contain random numbers.
    content.vb: Public Shared Sub NextBytes(buffer As Byte())
  overload: ONITwitchLib.ThreadRandom.NextBytes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">buffer</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  nameWithType.vb: ThreadRandom.NextBytes(Byte())
  fullName.vb: ONITwitchLib.ThreadRandom.NextBytes(Byte())
  name.vb: NextBytes(Byte())
- uid: ONITwitchLib.ThreadRandom.NextDouble
  commentId: M:ONITwitchLib.ThreadRandom.NextDouble
  id: NextDouble
  parent: ONITwitchLib.ThreadRandom
  langs:
  - csharp
  - vb
  name: NextDouble()
  nameWithType: ThreadRandom.NextDouble()
  fullName: ONITwitchLib.ThreadRandom.NextDouble()
  type: Method
  source:
    remote:
      path: ONITwitchLib/ThreadRandom.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: NextDouble
    path: ../ONITwitchLib/ThreadRandom.cs
    startLine: 63
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib
  summary: Returns a random floating-point number that is greater than or equal to 0.0, and less than 1.0.
  example: []
  syntax:
    content: public static double NextDouble()
    return:
      type: System.Double
      description: A double-precision floating point number that is greater than or equal to 0.0, and less than 1.0.
    content.vb: Public Shared Function NextDouble() As Double
  overload: ONITwitchLib.ThreadRandom.NextDouble*
references:
- uid: System.Random
  commentId: T:System.Random
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: ONITwitchLib
  commentId: N:ONITwitchLib
  href: ONITwitchLib.html
  name: ONITwitchLib
  nameWithType: ONITwitchLib
  fullName: ONITwitchLib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32.MaxValue
  commentId: F:System.Int32.MaxValue
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32.maxvalue
  name: MaxValue
  nameWithType: int.MaxValue
  fullName: int.MaxValue
  nameWithType.vb: Integer.MaxValue
  fullName.vb: Integer.MaxValue
- uid: ONITwitchLib.ThreadRandom.Next*
  commentId: Overload:ONITwitchLib.ThreadRandom.Next
  href: ONITwitchLib.ThreadRandom.html#ONITwitchLib.ThreadRandom.Next
  name: Next
  nameWithType: ThreadRandom.Next
  fullName: ONITwitchLib.ThreadRandom.Next
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: ONITwitchLib.ThreadRandom.NextBytes*
  commentId: Overload:ONITwitchLib.ThreadRandom.NextBytes
  href: ONITwitchLib.ThreadRandom.html#ONITwitchLib.ThreadRandom.NextBytes(System.Byte[])
  name: NextBytes
  nameWithType: ThreadRandom.NextBytes
  fullName: ONITwitchLib.ThreadRandom.NextBytes
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: ONITwitchLib.ThreadRandom.NextDouble*
  commentId: Overload:ONITwitchLib.ThreadRandom.NextDouble
  href: ONITwitchLib.ThreadRandom.html#ONITwitchLib.ThreadRandom.NextDouble
  name: NextDouble
  nameWithType: ThreadRandom.NextDouble
  fullName: ONITwitchLib.ThreadRandom.NextDouble
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
