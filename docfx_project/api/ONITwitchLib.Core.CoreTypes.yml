### YamlMime:ManagedReference
items:
- uid: ONITwitchLib.Core.CoreTypes
  commentId: T:ONITwitchLib.Core.CoreTypes
  id: CoreTypes
  parent: ONITwitchLib.Core
  children:
  - ONITwitchLib.Core.CoreTypes.CommandExtType
  - ONITwitchLib.Core.CoreTypes.CommandType
  - ONITwitchLib.Core.CoreTypes.DangerType
  - ONITwitchLib.Core.CoreTypes.DataManagerType
  - ONITwitchLib.Core.CoreTypes.EventGroupType
  - ONITwitchLib.Core.CoreTypes.EventInfoType
  - ONITwitchLib.Core.CoreTypes.EventManagerType
  - ONITwitchLib.Core.CoreTypes.ToastManagerType
  - ONITwitchLib.Core.CoreTypes.TwitchDeckManagerType
  - ONITwitchLib.Core.CoreTypes.TwitchSettingsType
  langs:
  - csharp
  - vb
  name: CoreTypes
  nameWithType: CoreTypes
  fullName: ONITwitchLib.Core.CoreTypes
  type: Class
  source:
    remote:
      path: ONITwitchLib/Core/CoreTypes.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: CoreTypes
    path: ../ONITwitchLib/Core/CoreTypes.cs
    startLine: 11
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: Contains <xref href="System.Type" data-throw-if-not-resolved="false"></xref>s of many types in the main Twitch Integration mod.
  remarks: These types are only present if the Twitch Integration mod is active.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static class CoreTypes
    content.vb: >-
      <PublicAPI>

      Public Module CoreTypes
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Core.CoreTypes.EventManagerType
  commentId: P:ONITwitchLib.Core.CoreTypes.EventManagerType
  id: EventManagerType
  parent: ONITwitchLib.Core.CoreTypes
  langs:
  - csharp
  - vb
  name: EventManagerType
  nameWithType: CoreTypes.EventManagerType
  fullName: ONITwitchLib.Core.CoreTypes.EventManagerType
  type: Property
  source:
    remote:
      path: ONITwitchLib/Core/CoreTypes.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: EventManagerType
    path: ../ONITwitchLib/Core/CoreTypes.cs
    startLine: 18
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: >-
    The type of the <xref href="ONITwitchLib.EventManager" data-throw-if-not-resolved="false"></xref> from the core Twitch Integration mod.

    Only present if the Twitch Integration mod is active.
  example: []
  syntax:
    content: >-
      [NotNull]

      public static Type EventManagerType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: >-
      <NotNull>

      Public Shared ReadOnly Property EventManagerType As Type
  overload: ONITwitchLib.Core.CoreTypes.EventManagerType*
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Core.CoreTypes.EventInfoType
  commentId: P:ONITwitchLib.Core.CoreTypes.EventInfoType
  id: EventInfoType
  parent: ONITwitchLib.Core.CoreTypes
  langs:
  - csharp
  - vb
  name: EventInfoType
  nameWithType: CoreTypes.EventInfoType
  fullName: ONITwitchLib.Core.CoreTypes.EventInfoType
  type: Property
  source:
    remote:
      path: ONITwitchLib/Core/CoreTypes.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: EventInfoType
    path: ../ONITwitchLib/Core/CoreTypes.cs
    startLine: 25
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: >-
    The type of <xref href="ONITwitchLib.EventInfo" data-throw-if-not-resolved="false"></xref> from the core Twitch Integration mod.

    Only present if the Twitch Integration mod is active.
  example: []
  syntax:
    content: >-
      [NotNull]

      public static Type EventInfoType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: >-
      <NotNull>

      Public Shared ReadOnly Property EventInfoType As Type
  overload: ONITwitchLib.Core.CoreTypes.EventInfoType*
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Core.CoreTypes.DataManagerType
  commentId: P:ONITwitchLib.Core.CoreTypes.DataManagerType
  id: DataManagerType
  parent: ONITwitchLib.Core.CoreTypes
  langs:
  - csharp
  - vb
  name: DataManagerType
  nameWithType: CoreTypes.DataManagerType
  fullName: ONITwitchLib.Core.CoreTypes.DataManagerType
  type: Property
  source:
    remote:
      path: ONITwitchLib/Core/CoreTypes.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: DataManagerType
    path: ../ONITwitchLib/Core/CoreTypes.cs
    startLine: 32
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: >-
    The type of the <xref href="ONITwitchLib.DataManager" data-throw-if-not-resolved="false"></xref> from the core Twitch Integration mod.

    Only present if the Twitch Integration mod is active.
  example: []
  syntax:
    content: >-
      [NotNull]

      public static Type DataManagerType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: >-
      <NotNull>

      Public Shared ReadOnly Property DataManagerType As Type
  overload: ONITwitchLib.Core.CoreTypes.DataManagerType*
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Core.CoreTypes.TwitchDeckManagerType
  commentId: P:ONITwitchLib.Core.CoreTypes.TwitchDeckManagerType
  id: TwitchDeckManagerType
  parent: ONITwitchLib.Core.CoreTypes
  langs:
  - csharp
  - vb
  name: TwitchDeckManagerType
  nameWithType: CoreTypes.TwitchDeckManagerType
  fullName: ONITwitchLib.Core.CoreTypes.TwitchDeckManagerType
  type: Property
  source:
    remote:
      path: ONITwitchLib/Core/CoreTypes.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: TwitchDeckManagerType
    path: ../ONITwitchLib/Core/CoreTypes.cs
    startLine: 39
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: >-
    The type of the <xref href="ONITwitchLib.Core.TwitchDeckManager" data-throw-if-not-resolved="false"></xref> from the core Twitch Integration mod.

    Only present if the Twitch Integration mod is active.
  example: []
  syntax:
    content: >-
      [NotNull]

      public static Type TwitchDeckManagerType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: >-
      <NotNull>

      Public Shared ReadOnly Property TwitchDeckManagerType As Type
  overload: ONITwitchLib.Core.CoreTypes.TwitchDeckManagerType*
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Core.CoreTypes.EventGroupType
  commentId: P:ONITwitchLib.Core.CoreTypes.EventGroupType
  id: EventGroupType
  parent: ONITwitchLib.Core.CoreTypes
  langs:
  - csharp
  - vb
  name: EventGroupType
  nameWithType: CoreTypes.EventGroupType
  fullName: ONITwitchLib.Core.CoreTypes.EventGroupType
  type: Property
  source:
    remote:
      path: ONITwitchLib/Core/CoreTypes.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: EventGroupType
    path: ../ONITwitchLib/Core/CoreTypes.cs
    startLine: 46
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: >-
    The type of <xref href="ONITwitchLib.EventGroup" data-throw-if-not-resolved="false"></xref> from the core Twitch Integration mod.

    Only present if the Twitch Integration mod is active.
  example: []
  syntax:
    content: >-
      [NotNull]

      public static Type EventGroupType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: >-
      <NotNull>

      Public Shared ReadOnly Property EventGroupType As Type
  overload: ONITwitchLib.Core.CoreTypes.EventGroupType*
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Core.CoreTypes.DangerType
  commentId: P:ONITwitchLib.Core.CoreTypes.DangerType
  id: DangerType
  parent: ONITwitchLib.Core.CoreTypes
  langs:
  - csharp
  - vb
  name: DangerType
  nameWithType: CoreTypes.DangerType
  fullName: ONITwitchLib.Core.CoreTypes.DangerType
  type: Property
  source:
    remote:
      path: ONITwitchLib/Core/CoreTypes.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: DangerType
    path: ../ONITwitchLib/Core/CoreTypes.cs
    startLine: 53
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: >-
    The type of <xref href="ONITwitchLib.Danger" data-throw-if-not-resolved="false"></xref> from the core Twitch Integration mod.

    Only present if the Twitch Integration mod is active.
  example: []
  syntax:
    content: >-
      [NotNull]

      public static Type DangerType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: >-
      <NotNull>

      Public Shared ReadOnly Property DangerType As Type
  overload: ONITwitchLib.Core.CoreTypes.DangerType*
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Core.CoreTypes.CommandType
  commentId: P:ONITwitchLib.Core.CoreTypes.CommandType
  id: CommandType
  parent: ONITwitchLib.Core.CoreTypes
  langs:
  - csharp
  - vb
  name: CommandType
  nameWithType: CoreTypes.CommandType
  fullName: ONITwitchLib.Core.CoreTypes.CommandType
  type: Property
  source:
    remote:
      path: ONITwitchLib/Core/CoreTypes.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: CommandType
    path: ../ONITwitchLib/Core/CoreTypes.cs
    startLine: 60
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: >-
    The type of <xref href="ONITwitchLib.Core.CommandBase" data-throw-if-not-resolved="false"></xref> from the core Twitch Integration mod.

    Only present if the Twitch Integration mod is active.
  example: []
  syntax:
    content: >-
      [NotNull]

      public static Type CommandType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: >-
      <NotNull>

      Public Shared ReadOnly Property CommandType As Type
  overload: ONITwitchLib.Core.CoreTypes.CommandType*
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Core.CoreTypes.CommandExtType
  commentId: P:ONITwitchLib.Core.CoreTypes.CommandExtType
  id: CommandExtType
  parent: ONITwitchLib.Core.CoreTypes
  langs:
  - csharp
  - vb
  name: CommandExtType
  nameWithType: CoreTypes.CommandExtType
  fullName: ONITwitchLib.Core.CoreTypes.CommandExtType
  type: Property
  source:
    remote:
      path: ONITwitchLib/Core/CoreTypes.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: CommandExtType
    path: ../ONITwitchLib/Core/CoreTypes.cs
    startLine: 67
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: >-
    The type of CommandBaseExt from the core Twitch Integration mod.

    Only present if the Twitch Integration mod is active.
  example: []
  syntax:
    content: >-
      [NotNull]

      public static Type CommandExtType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: >-
      <NotNull>

      Public Shared ReadOnly Property CommandExtType As Type
  overload: ONITwitchLib.Core.CoreTypes.CommandExtType*
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Core.CoreTypes.ToastManagerType
  commentId: P:ONITwitchLib.Core.CoreTypes.ToastManagerType
  id: ToastManagerType
  parent: ONITwitchLib.Core.CoreTypes
  langs:
  - csharp
  - vb
  name: ToastManagerType
  nameWithType: CoreTypes.ToastManagerType
  fullName: ONITwitchLib.Core.CoreTypes.ToastManagerType
  type: Property
  source:
    remote:
      path: ONITwitchLib/Core/CoreTypes.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: ToastManagerType
    path: ../ONITwitchLib/Core/CoreTypes.cs
    startLine: 74
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: >-
    The type of the <xref href="ONITwitchLib.ToastManager" data-throw-if-not-resolved="false"></xref> from the core Twitch Integration mod.

    Only present if the Twitch Integration mod is active.
  example: []
  syntax:
    content: >-
      [NotNull]

      public static Type ToastManagerType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: >-
      <NotNull>

      Public Shared ReadOnly Property ToastManagerType As Type
  overload: ONITwitchLib.Core.CoreTypes.ToastManagerType*
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
- uid: ONITwitchLib.Core.CoreTypes.TwitchSettingsType
  commentId: P:ONITwitchLib.Core.CoreTypes.TwitchSettingsType
  id: TwitchSettingsType
  parent: ONITwitchLib.Core.CoreTypes
  langs:
  - csharp
  - vb
  name: TwitchSettingsType
  nameWithType: CoreTypes.TwitchSettingsType
  fullName: ONITwitchLib.Core.CoreTypes.TwitchSettingsType
  type: Property
  source:
    remote:
      path: ONITwitchLib/Core/CoreTypes.cs
      branch: 1.2.0-beta
      repo: git@github.com:asquared31415/ONITwitch.git
    id: TwitchSettingsType
    path: ../ONITwitchLib/Core/CoreTypes.cs
    startLine: 81
  assemblies:
  - ONITwitchLib
  namespace: ONITwitchLib.Core
  summary: >-
    The type of <xref href="ONITwitchLib.Core.TwitchSettings" data-throw-if-not-resolved="false"></xref> from the core Twitch Integration mod.

    Only present if the Twitch Integration mod is active.
  example: []
  syntax:
    content: >-
      [NotNull]

      public static Type TwitchSettingsType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: >-
      <NotNull>

      Public Shared ReadOnly Property TwitchSettingsType As Type
  overload: ONITwitchLib.Core.CoreTypes.TwitchSettingsType*
  attributes:
  - type: JetBrains.Annotations.NotNullAttribute
    ctor: JetBrains.Annotations.NotNullAttribute.#ctor
    arguments: []
references:
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: ONITwitchLib.Core
  commentId: N:ONITwitchLib.Core
  href: ONITwitchLib.html
  name: ONITwitchLib.Core
  nameWithType: ONITwitchLib.Core
  fullName: ONITwitchLib.Core
  spec.csharp:
  - uid: ONITwitchLib
    name: ONITwitchLib
    href: ONITwitchLib.html
  - name: .
  - uid: ONITwitchLib.Core
    name: Core
    href: ONITwitchLib.Core.html
  spec.vb:
  - uid: ONITwitchLib
    name: ONITwitchLib
    href: ONITwitchLib.html
  - name: .
  - uid: ONITwitchLib.Core
    name: Core
    href: ONITwitchLib.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ONITwitchLib.EventManager
  commentId: T:ONITwitchLib.EventManager
  parent: ONITwitchLib
  href: ONITwitchLib.EventManager.html
  name: EventManager
  nameWithType: EventManager
  fullName: ONITwitchLib.EventManager
- uid: ONITwitchLib.Core.CoreTypes.EventManagerType*
  commentId: Overload:ONITwitchLib.Core.CoreTypes.EventManagerType
  href: ONITwitchLib.Core.CoreTypes.html#ONITwitchLib.Core.CoreTypes.EventManagerType
  name: EventManagerType
  nameWithType: CoreTypes.EventManagerType
  fullName: ONITwitchLib.Core.CoreTypes.EventManagerType
- uid: ONITwitchLib
  commentId: N:ONITwitchLib
  href: ONITwitchLib.html
  name: ONITwitchLib
  nameWithType: ONITwitchLib
  fullName: ONITwitchLib
- uid: ONITwitchLib.EventInfo
  commentId: T:ONITwitchLib.EventInfo
  parent: ONITwitchLib
  href: ONITwitchLib.EventInfo.html
  name: EventInfo
  nameWithType: EventInfo
  fullName: ONITwitchLib.EventInfo
- uid: ONITwitchLib.Core.CoreTypes.EventInfoType*
  commentId: Overload:ONITwitchLib.Core.CoreTypes.EventInfoType
  href: ONITwitchLib.Core.CoreTypes.html#ONITwitchLib.Core.CoreTypes.EventInfoType
  name: EventInfoType
  nameWithType: CoreTypes.EventInfoType
  fullName: ONITwitchLib.Core.CoreTypes.EventInfoType
- uid: ONITwitchLib.DataManager
  commentId: T:ONITwitchLib.DataManager
  parent: ONITwitchLib
  href: ONITwitchLib.DataManager.html
  name: DataManager
  nameWithType: DataManager
  fullName: ONITwitchLib.DataManager
- uid: ONITwitchLib.Core.CoreTypes.DataManagerType*
  commentId: Overload:ONITwitchLib.Core.CoreTypes.DataManagerType
  href: ONITwitchLib.Core.CoreTypes.html#ONITwitchLib.Core.CoreTypes.DataManagerType
  name: DataManagerType
  nameWithType: CoreTypes.DataManagerType
  fullName: ONITwitchLib.Core.CoreTypes.DataManagerType
- uid: ONITwitchLib.Core.TwitchDeckManager
  commentId: T:ONITwitchLib.Core.TwitchDeckManager
  parent: ONITwitchLib.Core
  href: ONITwitchLib.Core.TwitchDeckManager.html
  name: TwitchDeckManager
  nameWithType: TwitchDeckManager
  fullName: ONITwitchLib.Core.TwitchDeckManager
- uid: ONITwitchLib.Core.CoreTypes.TwitchDeckManagerType*
  commentId: Overload:ONITwitchLib.Core.CoreTypes.TwitchDeckManagerType
  href: ONITwitchLib.Core.CoreTypes.html#ONITwitchLib.Core.CoreTypes.TwitchDeckManagerType
  name: TwitchDeckManagerType
  nameWithType: CoreTypes.TwitchDeckManagerType
  fullName: ONITwitchLib.Core.CoreTypes.TwitchDeckManagerType
- uid: ONITwitchLib.EventGroup
  commentId: T:ONITwitchLib.EventGroup
  parent: ONITwitchLib
  href: ONITwitchLib.EventGroup.html
  name: EventGroup
  nameWithType: EventGroup
  fullName: ONITwitchLib.EventGroup
- uid: ONITwitchLib.Core.CoreTypes.EventGroupType*
  commentId: Overload:ONITwitchLib.Core.CoreTypes.EventGroupType
  href: ONITwitchLib.Core.CoreTypes.html#ONITwitchLib.Core.CoreTypes.EventGroupType
  name: EventGroupType
  nameWithType: CoreTypes.EventGroupType
  fullName: ONITwitchLib.Core.CoreTypes.EventGroupType
- uid: ONITwitchLib.Danger
  commentId: T:ONITwitchLib.Danger
  parent: ONITwitchLib
  href: ONITwitchLib.Danger.html
  name: Danger
  nameWithType: Danger
  fullName: ONITwitchLib.Danger
- uid: ONITwitchLib.Core.CoreTypes.DangerType*
  commentId: Overload:ONITwitchLib.Core.CoreTypes.DangerType
  href: ONITwitchLib.Core.CoreTypes.html#ONITwitchLib.Core.CoreTypes.DangerType
  name: DangerType
  nameWithType: CoreTypes.DangerType
  fullName: ONITwitchLib.Core.CoreTypes.DangerType
- uid: ONITwitchLib.Core.CommandBase
  commentId: T:ONITwitchLib.Core.CommandBase
  href: ONITwitchLib.Core.CommandBase.html
  name: CommandBase
  nameWithType: CommandBase
  fullName: ONITwitchLib.Core.CommandBase
- uid: ONITwitchLib.Core.CoreTypes.CommandType*
  commentId: Overload:ONITwitchLib.Core.CoreTypes.CommandType
  href: ONITwitchLib.Core.CoreTypes.html#ONITwitchLib.Core.CoreTypes.CommandType
  name: CommandType
  nameWithType: CoreTypes.CommandType
  fullName: ONITwitchLib.Core.CoreTypes.CommandType
- uid: ONITwitchLib.Core.CoreTypes.CommandExtType*
  commentId: Overload:ONITwitchLib.Core.CoreTypes.CommandExtType
  href: ONITwitchLib.Core.CoreTypes.html#ONITwitchLib.Core.CoreTypes.CommandExtType
  name: CommandExtType
  nameWithType: CoreTypes.CommandExtType
  fullName: ONITwitchLib.Core.CoreTypes.CommandExtType
- uid: ONITwitchLib.ToastManager
  commentId: T:ONITwitchLib.ToastManager
  href: ONITwitchLib.ToastManager.html
  name: ToastManager
  nameWithType: ToastManager
  fullName: ONITwitchLib.ToastManager
- uid: ONITwitchLib.Core.CoreTypes.ToastManagerType*
  commentId: Overload:ONITwitchLib.Core.CoreTypes.ToastManagerType
  href: ONITwitchLib.Core.CoreTypes.html#ONITwitchLib.Core.CoreTypes.ToastManagerType
  name: ToastManagerType
  nameWithType: CoreTypes.ToastManagerType
  fullName: ONITwitchLib.Core.CoreTypes.ToastManagerType
- uid: ONITwitchLib.Core.TwitchSettings
  commentId: T:ONITwitchLib.Core.TwitchSettings
  href: ONITwitchLib.Core.TwitchSettings.html
  name: TwitchSettings
  nameWithType: TwitchSettings
  fullName: ONITwitchLib.Core.TwitchSettings
- uid: ONITwitchLib.Core.CoreTypes.TwitchSettingsType*
  commentId: Overload:ONITwitchLib.Core.CoreTypes.TwitchSettingsType
  href: ONITwitchLib.Core.CoreTypes.html#ONITwitchLib.Core.CoreTypes.TwitchSettingsType
  name: TwitchSettingsType
  nameWithType: CoreTypes.TwitchSettingsType
  fullName: ONITwitchLib.Core.CoreTypes.TwitchSettingsType
